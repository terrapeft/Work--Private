<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>8, 13</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAE
        FAAAAk1TRnQBSQFMAgEBBQEAAQkBAAEEAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGBIAAX4CZgGiAYwBjQGiAYwBjQGiAYwBjQGiAYwBjQGiAYwBjQGiAYwBjQGi
        AYwBjQGiAYwBjQGiAYwBjQGiAYwBjQGiAYwBjQGiAYwBjQGiAYwBjQGiAYwBjQGMAXQBdZAAAX4CZgHg
        Ac4BzwHgAc4BzwHgAc4BzwHgAc4BzwHgAc4BzwHgAc4BzwHgAc4BzwHgAc4BzwHgAc4BzwHgAc4BzwHg
        Ac4BzwHgAc4BzwHgAc4BzwHgAc4BzwGjAo2QAAF+AmYB4QHPAdAB4QHPAdABbgJmAx4VIAEyAjABzAG8
        Ab0B4QHPAdABowGNAY6QAAF+AmYB4wHTAdQBywG8Ab0BJgIlA64VtQFnAmYBmwKQAeMB0wHUAaQBjwGQ
        kAABfgJmAeYB1wHYAagCnQM4GHYDWAF0AWwBbQHmAdcB2AGlAZABkZAAAX4CZgHpAdsB3AGqAqADjBj/
        A8oBgwJ8AekB2wHcAaYCkpAAAX4CZgHrAd8B4AGvAaUBpgM8B2kCaAFpDmgDVAF2AnEB6wHfAeABpwKU
        kAABfgJmAe4B4wHkAeMB2AHZAyUD3QPkA+UJ5gPnA+gDgwG0AawBrQHuAeMB5AGoApWQAAF+AmYB7wLn
        Ae8C5wGDAoADXQ+EA4MDegFVAlMB3gLXAe8C5wGoApaQAAF+AmYB8gHrAewB8gHrAewB0wLOA3oD6A/p
        A84BegJ3AfAC6gHyAesB7AGqAZgBmZAAAX4CZgH0Au8B9ALvAdkC1AOGA/YM3wPyA+EBfwJ9AfMC7gH0
        Au8BqgKZkAABfgJmAfcC9AH3AvQB2wLZA4YD3wx/A8sD4QGBAn8B9gLzAfcC9AGsApyQAAF+AmYB+gL4
        AfoC+AHeAtwDhgPHDCUDpQPhAYICgQH5AvcB+gL4Aa0CnZAAAX4CZgH7AvoB+wL6AeEC4ANsA74PwAOr
        A4UB+wL6AfsC+gGtAp6QAAF+AmYB/QL8Af0C/AP0A6wSoQOiA9MB/QL8Af0C/AGuAp+QAAF+AmYBfgJm
        AX4CZgF+AmYBfgJmAX4CZgF+AmYBfgJmAX4CZgF+AmYBfgJmAX4CZgF+AmYBfgJmAX4CZgF+Amb/AFEA
        Ab4BwAG/AacBqQGqAZUBkgGOAYEBgwGEAYUBjAGUAV8BdAF6AV8BZgFtAVwBYgFoAUECTwJcAWgBNQE8
        AUMDIwIQASAPAAHSAZIBjAHEAYEBewG3AnsBtwJ7AbQCdgGkAWoBcAGfAWABWQGlAWoBZAGYAmQBpwF1
        AXoBlgFbAWIBiQFbAWIBngF4AXM/AAHaAc0ByAHBAaIBkwGpAXcBXwGVAVYBOAGPAVABMQGaAWgBTwGu
        AY8BfwHIAb0BtwwAAXABiAKQAaABsAFwAbAB0AEAAZAB0AEAAZAB0AEAAZAB0AEAAZABwAEQAYgBwAEQ
        AYABsAEQAYABsAEgAXgBoAEgAXABkAEgAUgBYAwAAd8BmAGdAfACkAHgAoABsAFIASABQAEwASABwAG4
        AbABwAG4AbAB0ALAAdAByAHAA1ABoAFAATABoAFAATABoAE4ATABpAGAAYUDAAG3AaIBkwFjAUkBNQFj
        AUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFjAUkBNQFj
        AUkBNQFjAUkBNQFjAUkBNQFjAUkBNQkAAdMBuQGtAbkBiAFxAdcBuQGgAeEB1QHPAfMB7AHpAfMB6wHo
        AeQB3AHYAdUBuAGtAZYBZQFNAbMBmgGOCQABgAGIAZABgAHAAdABkAGoAbABgAHgAf8BYAHQAf8BUAHI
        Af8BUAHIAf8BQAHAAfABMAGwAfABMAGoAfABIAGgAeABEAGQAdABIAFoAYABYwFqAXAJAAHkAqsB/wGY
        AaAB8AGIAYAB4AKAAXABWAFQAkABMAGQAXgBcAHwAuAB8AHoAeABkAGAAXABoAFAATABoAJAAaABQAEw
        Aa4BgAGFAwABtwGiAZMB/gH9AfwB4QHcAdgB4AHXAdIB3wHSAcoB3wHOAcMB3QHIAbsB3AHDAbMB2wG/
        Aa0B2wG7AacB2wG7AacB2wG7AacB2wG7AacB2wG7AacBzwG0AaMBYwFJATUGAAHZAcABtAHEAZQBfgH+
        Ae4B3gHgAbgBoAHQAYABUAHAAVgBIAHAAVgBIAHQAYABUAHgAbgBoAHtAeQB2wGWAWUBTQGyAZkBjQYA
        AYABkAGgAYAB0AHwAZABqAGwAZABwAHQAXAB2AH/AWAB0AH/AWAB0AH/AVAByAH/AVABwAH/AUABuAHw
        ATABsAHwATABqAHwARABiAHQASABSAFgCQAB5AGwAasB/wKgAfACkAHwAYgBgAFwAVgBUAMAAkABMAHw
        AdgB0AHwAeAB0AGAAXgBYAGwAUgBQAGwAUgBQAGgAkABsQKJAwABtwGiAZMD/gH/Af0B/AH/AfoB+QH/
        AfgB9gH/AfYB8wEAAZIBXgH/AfAB6gH/Ae4B5wH/AesB4wH/AekB3wH/AecB2gH4AeUB3QH2AeIB2AHP
        AbQBowFjAUkBNQMAAecB2gHVAc4BngGHAf0B7AHbAeABqAGQAcABUAEQAcABUAEQAeABqAGQAwABsAFI
        ARABsAFIARAB0AGgAYAB7AHqAdkBlQFjAUsBwwG4AbMDAAGAAZABoAGAAdgB8AGAAcgB4AGQAagBsAGA
        AeAB/wFwAdAB/wFgAdgB/wFgAdAB/wFgAdAB/wFQAcgB/wFAAcAB8AFAAbgB8AEwAbAB8AEgAWgBgAGP
        AagBswYAAecBugG+Af8BqAGwAf8CoAHwApABcAFYAVABcAFYAVABcAFYAVABcAFYAVABcAFgAVABgAFo
        AWABwAFYAVABsAJQAbABSAFAAbECiQMAAbcBogGTBf8C/gL8Af8B/AH6AQABkgFeAQABhQFdAY8B2wG2
        AY8B2AGzAdYB5gHNAf8B6gHiAf8B6wHeAfgB5wHgAfcB5gHcAc8BtAGjAWMBSQE1AwAB3wG/AbEB7AHQ
        AbgB8AHIAbAB4AFYASAB0AFYARAB0AFQARAB4AGAAVAB4AGoAYABwAFQARABsAFIARABsAFIARAB4AG4
        AaAB1QG4Aa0BqgGKAXsDAAGAAZgBoAGQAeAB8AGQAeAB/wGQAagBsAGQAbgBwAFwAdgB/wFgAdgB/wFg
        AdgB/wFgAdgB/wFgAdAB/wFQAdAB/wFQAcgB/wFAAbgB8AEwAaAB4AFIAWcBdgYAAeICiQH/ArAB/wKw
        Af8CoAHwApAB8AGIAYAB4AKAAeABeAGAAdACcAHQAWgBcAHAAmABwAFYAVABsAJQAbsBjgGJAwABtwGi
        AZMJ/wEAAZIBXgEAAZIBXgEAAZIBXgEAAZIBXgEAAZIBXgEAAZIBXgGwAdwBvgH/AeoB4gH5AeoB5AH4
        AegB4QHPAbQBowFjAUkBNQMAAdsBqwGVAfkB7AHhAfABmAFwAfABYAEgAeABWAEgAeABWAEgAfABqAGQ
        AwAB0AFQARABwAFQARABsAFQARABwAF4AVAB5AHcAdgBlgFkAUwDAAGAAZgBoAGQAeAB8AGgAegB/wGA
        AcgB4AGQAagBsAGAAeAB/wGAAeAB/wGAAeAB/wGAAeAB/wGAAeAB/wGAAeAB/wGAAeAB/wFwAdgB/wFw
        AdgB/wFQAagB0AGBAY0BmAMAAeABiAGQAf8BuAHAAf8BuAGwAdACYAHAAWABUAHAAVgBUAHAAVABQAGw
        AVABMAGwAUgBMAGgAUABIAGgATgBEAHAAmABwAFYAVABuwGOAYkDAAG6AaUBlgz/AQABkgFeAQABkgFe
        AdUB7AHeAf8B9wH0AdQB6QHWAQABkgFeAf8B7gHoAfoB7QHoAfkB6wHkAdABuQGrAWMBSQE1AwAB3AGg
        AYQB+wHzAfAB/wF4AUAB/wFoATAB8AFoASAB8AFgASAB8AGIAVADAAHwAcABsAHAAVgBIAGwAVABEAGw
        AVgBIAHyAesB6AGLAU0BLwMAAZADoAHoAfABoAHoAf8BoAHoAf8BkAGwAcABkAGwAcABkAGoAbABkAGo
        AbABgAGgAbABgAGgAbABgAGYAaABgAGYAaABgAGQAaABgAGQAaABgAGIAZABcAGIAZADAAHhApUB/wLA
        AdABaAFgBgAB/wH4BfAB6AHgAfAB2AHQAeAB0AHAAeAByAHAAaABOAEQAcACYAG/AZYBmgMAAb4BqQGa
        Cf8BcgHeAbcD/wEAAZIBXgH/AvoBAAGSAV4B/wH3AfQBcgHXAasB/wHyAewB+wHwAewB+QHuAegB0QHB
        AbYBYwFJATUDAAHhAaUBiQH7AfQB8QH/AYABUAH/AXABMAH/AWgBMAH/AWgBMAH/AWgBIAHwAZABYAH/
        AfgC8AHYAsABUAEgAcABWAEgAfMB7AHoAZABUgE0AwABkAGgAbABoAHoAfABoAHwAf8BoAHoAf8BoAHo
        Af8BgAHYAf8BYAHYAf8BYAHYAf8BYAHYAf8BYAHYAf8BYAHYAf8BYAHYAf8BeQGPAZcMAAHjAaEBqAH/
        AsAB0AJwCQAB/wH4BfAB6AHgAfAB2AHQAeAB0AHAAaABQAEgAdABaAFgAcoCngMAAcMBrgGeCf8BAAGS
        AV4BrwHrAdYD/wHTAfMB5wEAAZIBXgEAAZIBXgH/AfcB9AH/AfQB7wH8AfMB7wH6AfAB7AHRAcEBtgFj
        AUkBNQMAAecBuAGhAfwB8AHmAf8BqAGAAf8BcAFAAf8BiAFQAf8BsAGQAf8BcAEwAfABaAEgAfABkAFw
        AwAB8AGAAVAB0AGIAWAB8wHeAdoBowFxAVkDAAGQAaABsAGgAvABsALwAaAB8AH/AaAB6AH/AaAB6AH/
        AXAB2AH/AZACoAGAAZgBoAGFAZwBpAGFAZQBpAGFApQBzwHXAdoMAAHwAqAB/wLAAeABeAFwDAAB/wH4
        BfAB6AHgAfAB2AHQAbABSAEwAdACcAHKAp4DAAHIAbIBown/AdMB9QHnAQABkgFeAQABkgFeAQABkgFe
        AQABkgFeAQABlgFjAQABkgFeAf8B+QH0Af0B9gHzAfwB8wHvAdEBwQG2AWMBSQE1AwAB7AHNAb8B7gHP
        AbYB/wHQAcAB/wF4AUAB/wGYAXADAAH/AcgBsAH/AZABYAH/AcgBsAH/AfgC8AF4AUAB8AHIAbAB1gG4
        AZ8BuAGYAYoDAAGQAagBsAGgAdAB4AGwAvABsALwAaAB8AH/AaAB6AH/AZABoAGwAdAB3QHgDwABngF7
        AWYBngF7AWYBkAFoAVADAAHwAakBoQH/AsAB4AKADwAB/wH4BfAB6AHgAbABUAEwAeABeAGAAcoCngMA
        Ab4BqQGaDP8B0wH1AecBrwHrAdYBjgHjAccBAAGSAV4BAAGSAV4B/wL7Af8B+QH4Af0B+AH2AfwB9gHz
        AdEBwQG2AWMBSQE1AwAB7wHjAd0B6QG7AaUB/gH2Ae0B/wHAAaAB/wF4AUAB/wG4AaAB/wH4AfADAAH/
        AfAB4AH/AZgBcAHwAbgBoAH+Ae8B3wGyAYIBagHLAcEBvAYAAZABqAGwAZABqAGwAZABqAGwAZABqAGw
        AZABqAGwAbUBxAHJFQABkAFoAVABkAFoAVADAAHwArAB/wLAAfABiAGQEgAB/wH4BPABzwF4AWwBhgJi
        AbkBagFjAwABwwGuAZ4V/wEAAZIBXgP/A/4B/wH9AfoB/gH7AfkB/QH5AfYB0QHBAbYBYwFJATUGAAHt
        AdUBygHpAbsBpQH+AfUB7AH/AdABwAH/AagBgAH/AYgBUAH/AYgBUAH/AagBgAHwAdABwAH+Ae8B3gG8
        AY0BdwHHAa8BpCEAAZABeAFgCQABoAGQAYADAAGQAXgBYAMAAfACsAH/AsAB/wKQFQAB/wH4AfABzgF9
        AXcBsAFYAWABsAFYAWADAAHIAbIBowHxAe0B6wHuAekB5QH2AfQB8gHuAekB5gHyAe4B6wz/AfEB7QHr
        AfoB+AH3Af4B/QH8Af4B+wH5AfAB6QHkAWgBTwE7CQAB7AHUAcgB6AG5AaQB6QG6AZ8B+gHrAeAB+wH0
        AfEB+gHzAfAB+QHrAeAB2AGpAY0BxwGXAYEBzQG1AaonAAGgAZABgAGkAY0BhQGzAZwBhQwAAfEBvQG2
        AfABuAGwAfQCxwH0AscB9AG9AcMB8wKyAegBswG5AeUCowHoAqwB5wGiAagB6gKoAdsBlwGdAdsBmAGS
        AdsCkgMAAb0BowGSAb8BowGSAckBpQGQAbcBogGTAckBowGOAcIBoQGOAcMBnwGKAcMBnQGHAcIBmwGE
        AcEBmgGDAb4BmwGGAb4BmgGEAb8BmQGCAb8BmQGCAcIBlQF7Ab0BiwFvDAAB6gHeAdoB5wHJAbwB4wG0
        AZ4B3QGiAYYB1wGcAX8B1QGmAY8B1QG3AakB2QHPAcnMAAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEB
        AQABAQYAAQEWAAP/gQAI/wEAAQcBwAEBAv8B8AEPAQABBwGAAQECAAHgAQcBAAEDAYABAQIAAcABAwEA
        AQMBgAEBAgABgAGBAQABAQGAAQECAAGAAQEBAAEBAYABAQIAAYABgQIAAYABAQIAAYABgQIAAYwBAQIA
        AYABAQEAAQcBjgEBAgABgAEhAQABBwGPAQECAAGCAQEBAAH4AY8BgQIAAYACgQH8AY8BwQIAAcABAwH/
        AboBjwHhAgAB4AEHAf8BxwGAAQECAAHwAQ8I/ws=
</value>
  </data>
</root>