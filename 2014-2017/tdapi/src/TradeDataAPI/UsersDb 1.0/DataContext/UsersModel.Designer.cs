//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("UsersModel", "FK_Audit_AuditActions", "Action", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.Action), "Audit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Audit), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_Audit_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.User), "Audit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Audit), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_Users_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.Company), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.User), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_Methods_MethodTypes", "MethodType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.MethodType), "Method", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Method), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_Users_ThresholdPeriods", "ThresholdPeriod", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.ThresholdPeriod), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.User), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "MethodGroupMethod", "Method", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Method), "MethodGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.MethodGroup))]
[assembly: EdmRelationshipAttribute("UsersModel", "UserRole", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Role), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.User))]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_Resources_ResourceType", "ResourceType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.ResourceType), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Resource), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_ServiceConfiguration_ResourceType", "ResourceType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.ResourceType), "ServiceConfiguration", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.ServiceConfiguration), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_Informers_Methods1", "Method", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.Method), "Informer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Informer), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_Informers_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.User), "Informer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Informer), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "SearchGroupColumns", "SearchColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.SearchColumn), "SearchGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.SearchGroup))]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_Companies_Countries", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.Country), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Company), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_Users_TimeZones", "TimeZone", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.TimeZone), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.User), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "RolePermission", "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Permission), "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Role))]
[assembly: EdmRelationshipAttribute("UsersModel", "PermissionSearchGroup", "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Permission), "SearchGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.SearchGroup))]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_Permissions_PermissionType", "PermissionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.PermissionType), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Permission), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_SearchColumns_SearchTables", "SearchTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.SearchTable), "SearchColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.SearchColumn), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_SearchGroups_SearchTables", "SearchTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.SearchTable), "SearchGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.SearchGroup), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_UserSearchQueries_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.User), "UserSearchQuery", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.UserSearchQuery), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_UsageStats_DataFormats", "DataFormat", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.DataFormat), "UsageStat", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.UsageStat), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_UsageStats_Methods", "Method", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(UsersDb.DataContext.Method), "UsageStat", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.UsageStat), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_UsageStats_Statuses", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.Status), "UsageStat", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.UsageStat), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_UsageStats_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(UsersDb.DataContext.User), "UsageStat", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.UsageStat), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_SubscriptionRequests_SubscriptionRequestType", "SubscriptionRequestType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.SubscriptionRequestType), "SubscriptionRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.SubscriptionRequest), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "SubscriptionRequestMethodGroup", "MethodGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.MethodGroup), "SubscriptionRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.SubscriptionRequest))]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_Subscriptions_MethodGroups", "MethodGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.MethodGroup), "Subscription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Subscription), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_Subscriptions_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.User), "Subscription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Subscription), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_IPs_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(UsersDb.DataContext.Company), "IP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.IP), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_IPs_Countries", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(UsersDb.DataContext.Country), "IP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.IP), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_UsageStats_UsersIPs", "IP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(UsersDb.DataContext.IP), "UsageStat", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.UsageStat), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_SubscriptionRequest_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.User), "SubscriptionRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.SubscriptionRequest), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_SubscriptionRequest_Users_AcceptedBy", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(UsersDb.DataContext.User), "SubscriptionRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.SubscriptionRequest), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_Methods_DatabaseConfiguration", "DatabaseConfiguration", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.DatabaseConfiguration), "Method", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Method), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_Trial_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.User), "Trial", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Trial), true)]
[assembly: EdmRelationshipAttribute("UsersModel", "FK_Trial_SubscriptionRequests", "SubscriptionRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UsersDb.DataContext.SubscriptionRequest), "Trial", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UsersDb.DataContext.Trial), true)]

#endregion

namespace UsersDb.DataContext
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class UsersEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new UsersEntities object using the connection string found in the 'UsersEntities' section of the application configuration file.
        /// </summary>
        public UsersEntities() : base("name=UsersEntities", "UsersEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UsersEntities object.
        /// </summary>
        public UsersEntities(string connectionString) : base(connectionString, "UsersEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UsersEntities object.
        /// </summary>
        public UsersEntities(EntityConnection connection) : base(connection, "UsersEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Action> Actions
        {
            get
            {
                if ((_Actions == null))
                {
                    _Actions = base.CreateObjectSet<Action>("Actions");
                }
                return _Actions;
            }
        }
        private ObjectSet<Action> _Actions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Audit> Audits
        {
            get
            {
                if ((_Audits == null))
                {
                    _Audits = base.CreateObjectSet<Audit>("Audits");
                }
                return _Audits;
            }
        }
        private ObjectSet<Audit> _Audits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MethodGroup> MethodGroups
        {
            get
            {
                if ((_MethodGroups == null))
                {
                    _MethodGroups = base.CreateObjectSet<MethodGroup>("MethodGroups");
                }
                return _MethodGroups;
            }
        }
        private ObjectSet<MethodGroup> _MethodGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Method> Methods
        {
            get
            {
                if ((_Methods == null))
                {
                    _Methods = base.CreateObjectSet<Method>("Methods");
                }
                return _Methods;
            }
        }
        private ObjectSet<Method> _Methods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MethodType> MethodTypes
        {
            get
            {
                if ((_MethodTypes == null))
                {
                    _MethodTypes = base.CreateObjectSet<MethodType>("MethodTypes");
                }
                return _MethodTypes;
            }
        }
        private ObjectSet<MethodType> _MethodTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Resource> Resources
        {
            get
            {
                if ((_Resources == null))
                {
                    _Resources = base.CreateObjectSet<Resource>("Resources");
                }
                return _Resources;
            }
        }
        private ObjectSet<Resource> _Resources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceConfiguration> ServiceConfigurations
        {
            get
            {
                if ((_ServiceConfigurations == null))
                {
                    _ServiceConfigurations = base.CreateObjectSet<ServiceConfiguration>("ServiceConfigurations");
                }
                return _ServiceConfigurations;
            }
        }
        private ObjectSet<ServiceConfiguration> _ServiceConfigurations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Status> Statuses
        {
            get
            {
                if ((_Statuses == null))
                {
                    _Statuses = base.CreateObjectSet<Status>("Statuses");
                }
                return _Statuses;
            }
        }
        private ObjectSet<Status> _Statuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ThresholdPeriod> ThresholdPeriods
        {
            get
            {
                if ((_ThresholdPeriods == null))
                {
                    _ThresholdPeriods = base.CreateObjectSet<ThresholdPeriod>("ThresholdPeriods");
                }
                return _ThresholdPeriods;
            }
        }
        private ObjectSet<ThresholdPeriod> _ThresholdPeriods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceType> ResourceTypes
        {
            get
            {
                if ((_ResourceTypes == null))
                {
                    _ResourceTypes = base.CreateObjectSet<ResourceType>("ResourceTypes");
                }
                return _ResourceTypes;
            }
        }
        private ObjectSet<ResourceType> _ResourceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Informer> Informers
        {
            get
            {
                if ((_Informers == null))
                {
                    _Informers = base.CreateObjectSet<Informer>("Informers");
                }
                return _Informers;
            }
        }
        private ObjectSet<Informer> _Informers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubscriptionRequest> SubscriptionRequests
        {
            get
            {
                if ((_SubscriptionRequests == null))
                {
                    _SubscriptionRequests = base.CreateObjectSet<SubscriptionRequest>("SubscriptionRequests");
                }
                return _SubscriptionRequests;
            }
        }
        private ObjectSet<SubscriptionRequest> _SubscriptionRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubscriptionRequestType> SubscriptionRequestTypes
        {
            get
            {
                if ((_SubscriptionRequestTypes == null))
                {
                    _SubscriptionRequestTypes = base.CreateObjectSet<SubscriptionRequestType>("SubscriptionRequestTypes");
                }
                return _SubscriptionRequestTypes;
            }
        }
        private ObjectSet<SubscriptionRequestType> _SubscriptionRequestTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SearchColumn> SearchColumns
        {
            get
            {
                if ((_SearchColumns == null))
                {
                    _SearchColumns = base.CreateObjectSet<SearchColumn>("SearchColumns");
                }
                return _SearchColumns;
            }
        }
        private ObjectSet<SearchColumn> _SearchColumns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SearchGroup> SearchGroups
        {
            get
            {
                if ((_SearchGroups == null))
                {
                    _SearchGroups = base.CreateObjectSet<SearchGroup>("SearchGroups");
                }
                return _SearchGroups;
            }
        }
        private ObjectSet<SearchGroup> _SearchGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Countries
        {
            get
            {
                if ((_Countries == null))
                {
                    _Countries = base.CreateObjectSet<Country>("Countries");
                }
                return _Countries;
            }
        }
        private ObjectSet<Country> _Countries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TimeZone> TimeZones
        {
            get
            {
                if ((_TimeZones == null))
                {
                    _TimeZones = base.CreateObjectSet<TimeZone>("TimeZones");
                }
                return _TimeZones;
            }
        }
        private ObjectSet<TimeZone> _TimeZones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Permission> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permission>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permission> _Permissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PermissionType> PermissionTypes
        {
            get
            {
                if ((_PermissionTypes == null))
                {
                    _PermissionTypes = base.CreateObjectSet<PermissionType>("PermissionTypes");
                }
                return _PermissionTypes;
            }
        }
        private ObjectSet<PermissionType> _PermissionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SearchTable> SearchTables
        {
            get
            {
                if ((_SearchTables == null))
                {
                    _SearchTables = base.CreateObjectSet<SearchTable>("SearchTables");
                }
                return _SearchTables;
            }
        }
        private ObjectSet<SearchTable> _SearchTables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserSearchQuery> UserSearchQueries
        {
            get
            {
                if ((_UserSearchQueries == null))
                {
                    _UserSearchQueries = base.CreateObjectSet<UserSearchQuery>("UserSearchQueries");
                }
                return _UserSearchQueries;
            }
        }
        private ObjectSet<UserSearchQuery> _UserSearchQueries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataFormat> DataFormats
        {
            get
            {
                if ((_DataFormats == null))
                {
                    _DataFormats = base.CreateObjectSet<DataFormat>("DataFormats");
                }
                return _DataFormats;
            }
        }
        private ObjectSet<DataFormat> _DataFormats;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsageStat> UsageStats
        {
            get
            {
                if ((_UsageStats == null))
                {
                    _UsageStats = base.CreateObjectSet<UsageStat>("UsageStats");
                }
                return _UsageStats;
            }
        }
        private ObjectSet<UsageStat> _UsageStats;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subscription> Subscriptions
        {
            get
            {
                if ((_Subscriptions == null))
                {
                    _Subscriptions = base.CreateObjectSet<Subscription>("Subscriptions");
                }
                return _Subscriptions;
            }
        }
        private ObjectSet<Subscription> _Subscriptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IP> IPs
        {
            get
            {
                if ((_IPs == null))
                {
                    _IPs = base.CreateObjectSet<IP>("IPs");
                }
                return _IPs;
            }
        }
        private ObjectSet<IP> _IPs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmailTemplate> EmailTemplates
        {
            get
            {
                if ((_EmailTemplates == null))
                {
                    _EmailTemplates = base.CreateObjectSet<EmailTemplate>("EmailTemplates");
                }
                return _EmailTemplates;
            }
        }
        private ObjectSet<EmailTemplate> _EmailTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DatabaseConfiguration> DatabaseConfigurations
        {
            get
            {
                if ((_DatabaseConfigurations == null))
                {
                    _DatabaseConfigurations = base.CreateObjectSet<DatabaseConfiguration>("DatabaseConfigurations");
                }
                return _DatabaseConfigurations;
            }
        }
        private ObjectSet<DatabaseConfiguration> _DatabaseConfigurations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Trial> Trials
        {
            get
            {
                if ((_Trials == null))
                {
                    _Trials = base.CreateObjectSet<Trial>("Trials");
                }
                return _Trials;
            }
        }
        private ObjectSet<Trial> _Trials;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Actions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActions(Action action)
        {
            base.AddObject("Actions", action);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Audits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAudits(Audit audit)
        {
            base.AddObject("Audits", audit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MethodGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMethodGroups(MethodGroup methodGroup)
        {
            base.AddObject("MethodGroups", methodGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Methods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMethods(Method method)
        {
            base.AddObject("Methods", method);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MethodTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMethodTypes(MethodType methodType)
        {
            base.AddObject("MethodTypes", methodType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Resources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResources(Resource resource)
        {
            base.AddObject("Resources", resource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceConfigurations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceConfigurations(ServiceConfiguration serviceConfiguration)
        {
            base.AddObject("ServiceConfigurations", serviceConfiguration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Statuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStatuses(Status status)
        {
            base.AddObject("Statuses", status);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ThresholdPeriods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToThresholdPeriods(ThresholdPeriod thresholdPeriod)
        {
            base.AddObject("ThresholdPeriods", thresholdPeriod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceTypes(ResourceType resourceType)
        {
            base.AddObject("ResourceTypes", resourceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Informers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInformers(Informer informer)
        {
            base.AddObject("Informers", informer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubscriptionRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscriptionRequests(SubscriptionRequest subscriptionRequest)
        {
            base.AddObject("SubscriptionRequests", subscriptionRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubscriptionRequestTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscriptionRequestTypes(SubscriptionRequestType subscriptionRequestType)
        {
            base.AddObject("SubscriptionRequestTypes", subscriptionRequestType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SearchColumns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSearchColumns(SearchColumn searchColumn)
        {
            base.AddObject("SearchColumns", searchColumn);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SearchGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSearchGroups(SearchGroup searchGroup)
        {
            base.AddObject("SearchGroups", searchGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Countries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountries(Country country)
        {
            base.AddObject("Countries", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TimeZones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTimeZones(TimeZone timeZone)
        {
            base.AddObject("TimeZones", timeZone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissions(Permission permission)
        {
            base.AddObject("Permissions", permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PermissionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissionTypes(PermissionType permissionType)
        {
            base.AddObject("PermissionTypes", permissionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SearchTables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSearchTables(SearchTable searchTable)
        {
            base.AddObject("SearchTables", searchTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserSearchQueries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserSearchQueries(UserSearchQuery userSearchQuery)
        {
            base.AddObject("UserSearchQueries", userSearchQuery);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataFormats EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataFormats(DataFormat dataFormat)
        {
            base.AddObject("DataFormats", dataFormat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsageStats EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsageStats(UsageStat usageStat)
        {
            base.AddObject("UsageStats", usageStat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subscriptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscriptions(Subscription subscription)
        {
            base.AddObject("Subscriptions", subscription);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IPs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIPs(IP iP)
        {
            base.AddObject("IPs", iP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmailTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmailTemplates(EmailTemplate emailTemplate)
        {
            base.AddObject("EmailTemplates", emailTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DatabaseConfigurations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDatabaseConfigurations(DatabaseConfiguration databaseConfiguration)
        {
            base.AddObject("DatabaseConfigurations", databaseConfiguration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Trials EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrials(Trial trial)
        {
            base.AddObject("Trials", trial);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<spInformerListOfCountries_Result> spInformerListOfCountries()
        {
            return base.ExecuteFunction<spInformerListOfCountries_Result>("spInformerListOfCountries");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="baseUrl">No Metadata Documentation available.</param>
        /// <param name="methodName">No Metadata Documentation available.</param>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="password">No Metadata Documentation available.</param>
        /// <param name="email">No Metadata Documentation available.</param>
        /// <param name="verificationLink">No Metadata Documentation available.</param>
        /// <param name="templateName">No Metadata Documentation available.</param>
        /// <param name="format">No Metadata Documentation available.</param>
        /// <param name="mailProfile">No Metadata Documentation available.</param>
        /// <param name="logoFullPath">No Metadata Documentation available.</param>
        public int spSendTrialEmail(global::System.String name, global::System.String baseUrl, global::System.String methodName, global::System.String username, global::System.String password, global::System.String email, global::System.String verificationLink, global::System.String templateName, global::System.String format, global::System.String mailProfile, global::System.String logoFullPath)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            ObjectParameter baseUrlParameter;
            if (baseUrl != null)
            {
                baseUrlParameter = new ObjectParameter("baseUrl", baseUrl);
            }
            else
            {
                baseUrlParameter = new ObjectParameter("baseUrl", typeof(global::System.String));
            }
    
            ObjectParameter methodNameParameter;
            if (methodName != null)
            {
                methodNameParameter = new ObjectParameter("methodName", methodName);
            }
            else
            {
                methodNameParameter = new ObjectParameter("methodName", typeof(global::System.String));
            }
    
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            ObjectParameter passwordParameter;
            if (password != null)
            {
                passwordParameter = new ObjectParameter("password", password);
            }
            else
            {
                passwordParameter = new ObjectParameter("password", typeof(global::System.String));
            }
    
            ObjectParameter emailParameter;
            if (email != null)
            {
                emailParameter = new ObjectParameter("email", email);
            }
            else
            {
                emailParameter = new ObjectParameter("email", typeof(global::System.String));
            }
    
            ObjectParameter verificationLinkParameter;
            if (verificationLink != null)
            {
                verificationLinkParameter = new ObjectParameter("verificationLink", verificationLink);
            }
            else
            {
                verificationLinkParameter = new ObjectParameter("verificationLink", typeof(global::System.String));
            }
    
            ObjectParameter templateNameParameter;
            if (templateName != null)
            {
                templateNameParameter = new ObjectParameter("templateName", templateName);
            }
            else
            {
                templateNameParameter = new ObjectParameter("templateName", typeof(global::System.String));
            }
    
            ObjectParameter formatParameter;
            if (format != null)
            {
                formatParameter = new ObjectParameter("format", format);
            }
            else
            {
                formatParameter = new ObjectParameter("format", typeof(global::System.String));
            }
    
            ObjectParameter mailProfileParameter;
            if (mailProfile != null)
            {
                mailProfileParameter = new ObjectParameter("mailProfile", mailProfile);
            }
            else
            {
                mailProfileParameter = new ObjectParameter("mailProfile", typeof(global::System.String));
            }
    
            ObjectParameter logoFullPathParameter;
            if (logoFullPath != null)
            {
                logoFullPathParameter = new ObjectParameter("logoFullPath", logoFullPath);
            }
            else
            {
                logoFullPathParameter = new ObjectParameter("logoFullPath", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("spSendTrialEmail", nameParameter, baseUrlParameter, methodNameParameter, usernameParameter, passwordParameter, emailParameter, verificationLinkParameter, templateNameParameter, formatParameter, mailProfileParameter, logoFullPathParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="hasUser">No Metadata Documentation available.</param>
        public int spTrialCheckUsername(global::System.String username, ObjectParameter hasUser)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("spTrialCheckUsername", usernameParameter, hasUser);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="Action")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Action : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Action object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Action CreateAction(global::System.Int32 id, global::System.String name)
        {
            Action action = new Action();
            action.Id = id;
            action.Name = name;
            return action;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Audit_AuditActions", "Audit")]
        public EntityCollection<Audit> Audits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Audit>("UsersModel.FK_Audit_AuditActions", "Audit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Audit>("UsersModel.FK_Audit_AuditActions", "Audit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="Audit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Audit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Audit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="actionId">Initial value of the ActionId property.</param>
        /// <param name="recordDate">Initial value of the RecordDate property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Audit CreateAudit(global::System.Guid id, global::System.Int32 actionId, global::System.DateTime recordDate, global::System.Int32 userId)
        {
            Audit audit = new Audit();
            audit.Id = id;
            audit.ActionId = actionId;
            audit.RecordDate = recordDate;
            audit.UserId = userId;
            return audit;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TableName
        {
            get
            {
                return _TableName;
            }
            set
            {
                OnTableNameChanging(value);
                ReportPropertyChanging("TableName");
                _TableName = StructuralObject.SetValidValue(value, true, "TableName");
                ReportPropertyChanged("TableName");
                OnTableNameChanged();
            }
        }
        private global::System.String _TableName;
        partial void OnTableNameChanging(global::System.String value);
        partial void OnTableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Values
        {
            get
            {
                return _Values;
            }
            set
            {
                OnValuesChanging(value);
                ReportPropertyChanging("Values");
                _Values = StructuralObject.SetValidValue(value, true, "Values");
                ReportPropertyChanged("Values");
                OnValuesChanged();
            }
        }
        private global::System.String _Values;
        partial void OnValuesChanging(global::System.String value);
        partial void OnValuesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActionId
        {
            get
            {
                return _ActionId;
            }
            set
            {
                OnActionIdChanging(value);
                ReportPropertyChanging("ActionId");
                _ActionId = StructuralObject.SetValidValue(value, "ActionId");
                ReportPropertyChanged("ActionId");
                OnActionIdChanged();
            }
        }
        private global::System.Int32 _ActionId;
        partial void OnActionIdChanging(global::System.Int32 value);
        partial void OnActionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RecordDate
        {
            get
            {
                return _RecordDate;
            }
            set
            {
                OnRecordDateChanging(value);
                ReportPropertyChanging("RecordDate");
                _RecordDate = StructuralObject.SetValidValue(value, "RecordDate");
                ReportPropertyChanged("RecordDate");
                OnRecordDateChanged();
            }
        }
        private global::System.DateTime _RecordDate;
        partial void OnRecordDateChanging(global::System.DateTime value);
        partial void OnRecordDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IpAddr
        {
            get
            {
                return _IpAddr;
            }
            set
            {
                OnIpAddrChanging(value);
                ReportPropertyChanging("IpAddr");
                _IpAddr = StructuralObject.SetValidValue(value, true, "IpAddr");
                ReportPropertyChanged("IpAddr");
                OnIpAddrChanged();
            }
        }
        private global::System.String _IpAddr;
        partial void OnIpAddrChanging(global::System.String value);
        partial void OnIpAddrChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Audit_AuditActions", "Action")]
        public Action Action
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Action>("UsersModel.FK_Audit_AuditActions", "Action").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Action>("UsersModel.FK_Audit_AuditActions", "Action").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Action> ActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Action>("UsersModel.FK_Audit_AuditActions", "Action");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Action>("UsersModel.FK_Audit_AuditActions", "Action", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Audit_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_Audit_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_Audit_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_Audit_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UsersModel.FK_Audit_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="countryId">Initial value of the CountryId property.</param>
        public static Company CreateCompany(global::System.Int32 id, global::System.String name, global::System.Int32 countryId)
        {
            Company company = new Company();
            company.Id = id;
            company.Name = name;
            company.CountryId = countryId;
            return company;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true, "Fax");
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value, "CountryId");
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Users_Companies", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("UsersModel.FK_Users_Companies", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("UsersModel.FK_Users_Companies", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Companies_Countries", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("UsersModel.FK_Companies_Countries", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("UsersModel.FK_Companies_Countries", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("UsersModel.FK_Companies_Countries", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("UsersModel.FK_Companies_Countries", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_IPs_Companies", "IP")]
        public EntityCollection<IP> IPs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IP>("UsersModel.FK_IPs_Companies", "IP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IP>("UsersModel.FK_IPs_Companies", "IP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static Country CreateCountry(global::System.Int32 id, global::System.String name, global::System.String code)
        {
            Country country = new Country();
            country.Id = id;
            country.Name = name;
            country.Code = code;
            return country;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Companies_Countries", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("UsersModel.FK_Companies_Countries", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("UsersModel.FK_Companies_Countries", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_IPs_Countries", "IP")]
        public EntityCollection<IP> IpList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IP>("UsersModel.FK_IPs_Countries", "IP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IP>("UsersModel.FK_IPs_Countries", "IP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="DatabaseConfiguration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DatabaseConfiguration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DatabaseConfiguration object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        /// <param name="connectionString">Initial value of the ConnectionString property.</param>
        /// <param name="storedProcPrefix">Initial value of the StoredProcPrefix property.</param>
        /// <param name="storedProcParamPrefix">Initial value of the StoredProcParamPrefix property.</param>
        /// <param name="storedProcMethodPrefix">Initial value of the StoredProcMethodPrefix property.</param>
        /// <param name="storedProcOwner">Initial value of the StoredProcOwner property.</param>
        /// <param name="storedProcInformerPrefix">Initial value of the StoredProcInformerPrefix property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static DatabaseConfiguration CreateDatabaseConfiguration(global::System.Int32 id, global::System.String alias, global::System.String connectionString, global::System.String storedProcPrefix, global::System.String storedProcParamPrefix, global::System.String storedProcMethodPrefix, global::System.String storedProcOwner, global::System.String storedProcInformerPrefix, global::System.Boolean isDeleted)
        {
            DatabaseConfiguration databaseConfiguration = new DatabaseConfiguration();
            databaseConfiguration.Id = id;
            databaseConfiguration.Alias = alias;
            databaseConfiguration.ConnectionString = connectionString;
            databaseConfiguration.StoredProcPrefix = storedProcPrefix;
            databaseConfiguration.StoredProcParamPrefix = storedProcParamPrefix;
            databaseConfiguration.StoredProcMethodPrefix = storedProcMethodPrefix;
            databaseConfiguration.StoredProcOwner = storedProcOwner;
            databaseConfiguration.StoredProcInformerPrefix = storedProcInformerPrefix;
            databaseConfiguration.IsDeleted = isDeleted;
            return databaseConfiguration;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, false, "Alias");
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private global::System.String _Alias;
        partial void OnAliasChanging(global::System.String value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConnectionString
        {
            get
            {
                return _ConnectionString;
            }
            set
            {
                OnConnectionStringChanging(value);
                ReportPropertyChanging("ConnectionString");
                _ConnectionString = StructuralObject.SetValidValue(value, false, "ConnectionString");
                ReportPropertyChanged("ConnectionString");
                OnConnectionStringChanged();
            }
        }
        private global::System.String _ConnectionString;
        partial void OnConnectionStringChanging(global::System.String value);
        partial void OnConnectionStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoredProcPrefix
        {
            get
            {
                return _StoredProcPrefix;
            }
            set
            {
                OnStoredProcPrefixChanging(value);
                ReportPropertyChanging("StoredProcPrefix");
                _StoredProcPrefix = StructuralObject.SetValidValue(value, false, "StoredProcPrefix");
                ReportPropertyChanged("StoredProcPrefix");
                OnStoredProcPrefixChanged();
            }
        }
        private global::System.String _StoredProcPrefix;
        partial void OnStoredProcPrefixChanging(global::System.String value);
        partial void OnStoredProcPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoredProcParamPrefix
        {
            get
            {
                return _StoredProcParamPrefix;
            }
            set
            {
                OnStoredProcParamPrefixChanging(value);
                ReportPropertyChanging("StoredProcParamPrefix");
                _StoredProcParamPrefix = StructuralObject.SetValidValue(value, false, "StoredProcParamPrefix");
                ReportPropertyChanged("StoredProcParamPrefix");
                OnStoredProcParamPrefixChanged();
            }
        }
        private global::System.String _StoredProcParamPrefix;
        partial void OnStoredProcParamPrefixChanging(global::System.String value);
        partial void OnStoredProcParamPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoredProcMethodPrefix
        {
            get
            {
                return _StoredProcMethodPrefix;
            }
            set
            {
                OnStoredProcMethodPrefixChanging(value);
                ReportPropertyChanging("StoredProcMethodPrefix");
                _StoredProcMethodPrefix = StructuralObject.SetValidValue(value, false, "StoredProcMethodPrefix");
                ReportPropertyChanged("StoredProcMethodPrefix");
                OnStoredProcMethodPrefixChanged();
            }
        }
        private global::System.String _StoredProcMethodPrefix;
        partial void OnStoredProcMethodPrefixChanging(global::System.String value);
        partial void OnStoredProcMethodPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoredProcOwner
        {
            get
            {
                return _StoredProcOwner;
            }
            set
            {
                OnStoredProcOwnerChanging(value);
                ReportPropertyChanging("StoredProcOwner");
                _StoredProcOwner = StructuralObject.SetValidValue(value, false, "StoredProcOwner");
                ReportPropertyChanged("StoredProcOwner");
                OnStoredProcOwnerChanged();
            }
        }
        private global::System.String _StoredProcOwner;
        partial void OnStoredProcOwnerChanging(global::System.String value);
        partial void OnStoredProcOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoredProcInformerPrefix
        {
            get
            {
                return _StoredProcInformerPrefix;
            }
            set
            {
                OnStoredProcInformerPrefixChanging(value);
                ReportPropertyChanging("StoredProcInformerPrefix");
                _StoredProcInformerPrefix = StructuralObject.SetValidValue(value, false, "StoredProcInformerPrefix");
                ReportPropertyChanged("StoredProcInformerPrefix");
                OnStoredProcInformerPrefixChanged();
            }
        }
        private global::System.String _StoredProcInformerPrefix;
        partial void OnStoredProcInformerPrefixChanging(global::System.String value);
        partial void OnStoredProcInformerPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value, "IsDefault");
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDefault;
        partial void OnIsDefaultChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Methods_DatabaseConfiguration", "Method")]
        public EntityCollection<Method> Methods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Method>("UsersModel.FK_Methods_DatabaseConfiguration", "Method");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Method>("UsersModel.FK_Methods_DatabaseConfiguration", "Method", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="DataFormat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataFormat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataFormat object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static DataFormat CreateDataFormat(global::System.Int32 id, global::System.String name)
        {
            DataFormat dataFormat = new DataFormat();
            dataFormat.Id = id;
            dataFormat.Name = name;
            return dataFormat;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_UsageStats_DataFormats", "UsageStat")]
        public EntityCollection<UsageStat> UsageStats
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsageStat>("UsersModel.FK_UsageStats_DataFormats", "UsageStat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsageStat>("UsersModel.FK_UsageStats_DataFormats", "UsageStat", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="EmailTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmailTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmailTemplate object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static EmailTemplate CreateEmailTemplate(global::System.String name, global::System.Int32 id)
        {
            EmailTemplate emailTemplate = new EmailTemplate();
            emailTemplate.Name = name;
            emailTemplate.Id = id;
            return emailTemplate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true, "Subject");
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, true, "Body");
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="Informer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Informer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Informer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="contentProviderId">Initial value of the ContentProviderId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="xslt">Initial value of the Xslt property.</param>
        /// <param name="showFooter">Initial value of the ShowFooter property.</param>
        public static Informer CreateInformer(global::System.Int32 id, global::System.String title, global::System.Int32 contentProviderId, global::System.Int32 userId, global::System.String xslt, global::System.Boolean showFooter)
        {
            Informer informer = new Informer();
            informer.Id = id;
            informer.Title = title;
            informer.ContentProviderId = contentProviderId;
            informer.UserId = userId;
            informer.Xslt = xslt;
            informer.ShowFooter = showFooter;
            return informer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HeaderColor
        {
            get
            {
                return _HeaderColor;
            }
            set
            {
                OnHeaderColorChanging(value);
                ReportPropertyChanging("HeaderColor");
                _HeaderColor = StructuralObject.SetValidValue(value, true, "HeaderColor");
                ReportPropertyChanged("HeaderColor");
                OnHeaderColorChanged();
            }
        }
        private global::System.String _HeaderColor;
        partial void OnHeaderColorChanging(global::System.String value);
        partial void OnHeaderColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentColor
        {
            get
            {
                return _ContentColor;
            }
            set
            {
                OnContentColorChanging(value);
                ReportPropertyChanging("ContentColor");
                _ContentColor = StructuralObject.SetValidValue(value, true, "ContentColor");
                ReportPropertyChanged("ContentColor");
                OnContentColorChanged();
            }
        }
        private global::System.String _ContentColor;
        partial void OnContentColorChanging(global::System.String value);
        partial void OnContentColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InformerStyle
        {
            get
            {
                return _InformerStyle;
            }
            set
            {
                OnInformerStyleChanging(value);
                ReportPropertyChanging("InformerStyle");
                _InformerStyle = StructuralObject.SetValidValue(value, true, "InformerStyle");
                ReportPropertyChanged("InformerStyle");
                OnInformerStyleChanged();
            }
        }
        private global::System.String _InformerStyle;
        partial void OnInformerStyleChanging(global::System.String value);
        partial void OnInformerStyleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentStyle
        {
            get
            {
                return _ContentStyle;
            }
            set
            {
                OnContentStyleChanging(value);
                ReportPropertyChanging("ContentStyle");
                _ContentStyle = StructuralObject.SetValidValue(value, true, "ContentStyle");
                ReportPropertyChanged("ContentStyle");
                OnContentStyleChanged();
            }
        }
        private global::System.String _ContentStyle;
        partial void OnContentStyleChanging(global::System.String value);
        partial void OnContentStyleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TitleStyle
        {
            get
            {
                return _TitleStyle;
            }
            set
            {
                OnTitleStyleChanging(value);
                ReportPropertyChanging("TitleStyle");
                _TitleStyle = StructuralObject.SetValidValue(value, true, "TitleStyle");
                ReportPropertyChanged("TitleStyle");
                OnTitleStyleChanged();
            }
        }
        private global::System.String _TitleStyle;
        partial void OnTitleStyleChanging(global::System.String value);
        partial void OnTitleStyleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContentProviderId
        {
            get
            {
                return _ContentProviderId;
            }
            set
            {
                OnContentProviderIdChanging(value);
                ReportPropertyChanging("ContentProviderId");
                _ContentProviderId = StructuralObject.SetValidValue(value, "ContentProviderId");
                ReportPropertyChanged("ContentProviderId");
                OnContentProviderIdChanged();
            }
        }
        private global::System.Int32 _ContentProviderId;
        partial void OnContentProviderIdChanging(global::System.Int32 value);
        partial void OnContentProviderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Xslt
        {
            get
            {
                return _Xslt;
            }
            set
            {
                OnXsltChanging(value);
                ReportPropertyChanging("Xslt");
                _Xslt = StructuralObject.SetValidValue(value, false, "Xslt");
                ReportPropertyChanged("Xslt");
                OnXsltChanged();
            }
        }
        private global::System.String _Xslt;
        partial void OnXsltChanging(global::System.String value);
        partial void OnXsltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String XsltParameters
        {
            get
            {
                return _XsltParameters;
            }
            set
            {
                OnXsltParametersChanging(value);
                ReportPropertyChanging("XsltParameters");
                _XsltParameters = StructuralObject.SetValidValue(value, true, "XsltParameters");
                ReportPropertyChanged("XsltParameters");
                OnXsltParametersChanged();
            }
        }
        private global::System.String _XsltParameters;
        partial void OnXsltParametersChanging(global::System.String value);
        partial void OnXsltParametersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FooterColor
        {
            get
            {
                return _FooterColor;
            }
            set
            {
                OnFooterColorChanging(value);
                ReportPropertyChanging("FooterColor");
                _FooterColor = StructuralObject.SetValidValue(value, true, "FooterColor");
                ReportPropertyChanged("FooterColor");
                OnFooterColorChanged();
            }
        }
        private global::System.String _FooterColor;
        partial void OnFooterColorChanging(global::System.String value);
        partial void OnFooterColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FooterStyle
        {
            get
            {
                return _FooterStyle;
            }
            set
            {
                OnFooterStyleChanging(value);
                ReportPropertyChanging("FooterStyle");
                _FooterStyle = StructuralObject.SetValidValue(value, true, "FooterStyle");
                ReportPropertyChanged("FooterStyle");
                OnFooterStyleChanged();
            }
        }
        private global::System.String _FooterStyle;
        partial void OnFooterStyleChanging(global::System.String value);
        partial void OnFooterStyleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowFooter
        {
            get
            {
                return _ShowFooter;
            }
            set
            {
                OnShowFooterChanging(value);
                ReportPropertyChanging("ShowFooter");
                _ShowFooter = StructuralObject.SetValidValue(value, "ShowFooter");
                ReportPropertyChanged("ShowFooter");
                OnShowFooterChanged();
            }
        }
        private global::System.Boolean _ShowFooter;
        partial void OnShowFooterChanging(global::System.Boolean value);
        partial void OnShowFooterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Informers_Methods1", "Method")]
        public Method Method
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Method>("UsersModel.FK_Informers_Methods1", "Method").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Method>("UsersModel.FK_Informers_Methods1", "Method").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Method> MethodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Method>("UsersModel.FK_Informers_Methods1", "Method");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Method>("UsersModel.FK_Informers_Methods1", "Method", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Informers_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_Informers_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_Informers_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_Informers_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UsersModel.FK_Informers_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="IP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IP object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="ip">Initial value of the Ip property.</param>
        /// <param name="isAllowed">Initial value of the IsAllowed property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static IP CreateIP(global::System.Int32 id, global::System.String ip, global::System.Boolean isAllowed, global::System.Boolean isDeleted)
        {
            IP iP = new IP();
            iP.Id = id;
            iP.Ip = ip;
            iP.IsAllowed = isAllowed;
            iP.IsDeleted = isDeleted;
            return iP;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ip
        {
            get
            {
                return _Ip;
            }
            set
            {
                OnIpChanging(value);
                ReportPropertyChanging("Ip");
                _Ip = StructuralObject.SetValidValue(value, false, "Ip");
                ReportPropertyChanged("Ip");
                OnIpChanged();
            }
        }
        private global::System.String _Ip;
        partial void OnIpChanging(global::System.String value);
        partial void OnIpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GeoLocationCountryId
        {
            get
            {
                return _GeoLocationCountryId;
            }
            set
            {
                OnGeoLocationCountryIdChanging(value);
                ReportPropertyChanging("GeoLocationCountryId");
                _GeoLocationCountryId = StructuralObject.SetValidValue(value, "GeoLocationCountryId");
                ReportPropertyChanged("GeoLocationCountryId");
                OnGeoLocationCountryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GeoLocationCountryId;
        partial void OnGeoLocationCountryIdChanging(Nullable<global::System.Int32> value);
        partial void OnGeoLocationCountryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAllowed
        {
            get
            {
                return _IsAllowed;
            }
            set
            {
                OnIsAllowedChanging(value);
                ReportPropertyChanging("IsAllowed");
                _IsAllowed = StructuralObject.SetValidValue(value, "IsAllowed");
                ReportPropertyChanged("IsAllowed");
                OnIsAllowedChanged();
            }
        }
        private global::System.Boolean _IsAllowed;
        partial void OnIsAllowedChanging(global::System.Boolean value);
        partial void OnIsAllowedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_IPs_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("UsersModel.FK_IPs_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("UsersModel.FK_IPs_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("UsersModel.FK_IPs_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("UsersModel.FK_IPs_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_IPs_Countries", "Country")]
        public Country LookedUpCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("UsersModel.FK_IPs_Countries", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("UsersModel.FK_IPs_Countries", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> LookedUpCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("UsersModel.FK_IPs_Countries", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("UsersModel.FK_IPs_Countries", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_UsageStats_UsersIPs", "UsageStat")]
        public EntityCollection<UsageStat> UsageStats
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsageStat>("UsersModel.FK_UsageStats_UsersIPs", "UsageStat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsageStat>("UsersModel.FK_UsageStats_UsersIPs", "UsageStat", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="Method")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Method : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Method object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="databaseId">Initial value of the DatabaseId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Method CreateMethod(global::System.Int32 id, global::System.Int32 typeId, global::System.Int32 databaseId, global::System.Boolean isDeleted)
        {
            Method method = new Method();
            method.Id = id;
            method.TypeId = typeId;
            method.DatabaseId = databaseId;
            method.IsDeleted = isDeleted;
            return method;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name = "";
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value, "TypeId");
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private global::System.Int32 _TypeId;
        partial void OnTypeIdChanging(global::System.Int32 value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, true, "DisplayName");
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DatabaseId
        {
            get
            {
                return _DatabaseId;
            }
            set
            {
                OnDatabaseIdChanging(value);
                ReportPropertyChanging("DatabaseId");
                _DatabaseId = StructuralObject.SetValidValue(value, "DatabaseId");
                ReportPropertyChanged("DatabaseId");
                OnDatabaseIdChanged();
            }
        }
        private global::System.Int32 _DatabaseId;
        partial void OnDatabaseIdChanging(global::System.Int32 value);
        partial void OnDatabaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Methods_MethodTypes", "MethodType")]
        public MethodType MethodType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MethodType>("UsersModel.FK_Methods_MethodTypes", "MethodType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MethodType>("UsersModel.FK_Methods_MethodTypes", "MethodType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MethodType> MethodTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MethodType>("UsersModel.FK_Methods_MethodTypes", "MethodType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MethodType>("UsersModel.FK_Methods_MethodTypes", "MethodType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "MethodGroupMethod", "MethodGroup")]
        public EntityCollection<MethodGroup> MethodGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MethodGroup>("UsersModel.MethodGroupMethod", "MethodGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MethodGroup>("UsersModel.MethodGroupMethod", "MethodGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_UsageStats_Methods", "UsageStat")]
        public EntityCollection<UsageStat> UsageStats
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsageStat>("UsersModel.FK_UsageStats_Methods", "UsageStat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsageStat>("UsersModel.FK_UsageStats_Methods", "UsageStat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Methods_DatabaseConfiguration", "DatabaseConfiguration")]
        public DatabaseConfiguration DatabaseConfiguration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DatabaseConfiguration>("UsersModel.FK_Methods_DatabaseConfiguration", "DatabaseConfiguration").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DatabaseConfiguration>("UsersModel.FK_Methods_DatabaseConfiguration", "DatabaseConfiguration").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DatabaseConfiguration> DatabaseConfigurationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DatabaseConfiguration>("UsersModel.FK_Methods_DatabaseConfiguration", "DatabaseConfiguration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DatabaseConfiguration>("UsersModel.FK_Methods_DatabaseConfiguration", "DatabaseConfiguration", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="MethodGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MethodGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MethodGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="shared">Initial value of the Shared property.</param>
        /// <param name="isTrial">Initial value of the IsTrial property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static MethodGroup CreateMethodGroup(global::System.Int32 id, global::System.String name, global::System.Boolean shared, global::System.Boolean isTrial, global::System.Boolean isDeleted)
        {
            MethodGroup methodGroup = new MethodGroup();
            methodGroup.Id = id;
            methodGroup.Name = name;
            methodGroup.Shared = shared;
            methodGroup.IsTrial = isTrial;
            methodGroup.IsDeleted = isDeleted;
            return methodGroup;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Shared
        {
            get
            {
                return _Shared;
            }
            set
            {
                OnSharedChanging(value);
                ReportPropertyChanging("Shared");
                _Shared = StructuralObject.SetValidValue(value, "Shared");
                ReportPropertyChanged("Shared");
                OnSharedChanged();
            }
        }
        private global::System.Boolean _Shared;
        partial void OnSharedChanging(global::System.Boolean value);
        partial void OnSharedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTrial
        {
            get
            {
                return _IsTrial;
            }
            set
            {
                OnIsTrialChanging(value);
                ReportPropertyChanging("IsTrial");
                _IsTrial = StructuralObject.SetValidValue(value, "IsTrial");
                ReportPropertyChanged("IsTrial");
                OnIsTrialChanged();
            }
        }
        private global::System.Boolean _IsTrial;
        partial void OnIsTrialChanging(global::System.Boolean value);
        partial void OnIsTrialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "MethodGroupMethod", "Method")]
        public EntityCollection<Method> Methods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Method>("UsersModel.MethodGroupMethod", "Method");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Method>("UsersModel.MethodGroupMethod", "Method", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "SubscriptionRequestMethodGroup", "SubscriptionRequest")]
        public EntityCollection<SubscriptionRequest> SubscriptionRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubscriptionRequest>("UsersModel.SubscriptionRequestMethodGroup", "SubscriptionRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubscriptionRequest>("UsersModel.SubscriptionRequestMethodGroup", "SubscriptionRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Subscriptions_MethodGroups", "Subscription")]
        public EntityCollection<Subscription> Subscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("UsersModel.FK_Subscriptions_MethodGroups", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("UsersModel.FK_Subscriptions_MethodGroups", "Subscription", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="MethodType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MethodType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MethodType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static MethodType CreateMethodType(global::System.Int32 id, global::System.String name)
        {
            MethodType methodType = new MethodType();
            methodType.Id = id;
            methodType.Name = name;
            return methodType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Methods_MethodTypes", "Method")]
        public EntityCollection<Method> Methods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Method>("UsersModel.FK_Methods_MethodTypes", "Method");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Method>("UsersModel.FK_Methods_MethodTypes", "Method", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Permission object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="permissionTypeId">Initial value of the PermissionTypeId property.</param>
        public static Permission CreatePermission(global::System.Int32 id, global::System.String name, global::System.Int32 permissionTypeId)
        {
            Permission permission = new Permission();
            permission.Id = id;
            permission.Name = name;
            permission.PermissionTypeId = permissionTypeId;
            return permission;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PermissionTypeId
        {
            get
            {
                return _PermissionTypeId;
            }
            set
            {
                OnPermissionTypeIdChanging(value);
                ReportPropertyChanging("PermissionTypeId");
                _PermissionTypeId = StructuralObject.SetValidValue(value, "PermissionTypeId");
                ReportPropertyChanged("PermissionTypeId");
                OnPermissionTypeIdChanged();
            }
        }
        private global::System.Int32 _PermissionTypeId;
        partial void OnPermissionTypeIdChanging(global::System.Int32 value);
        partial void OnPermissionTypeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "RolePermission", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("UsersModel.RolePermission", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("UsersModel.RolePermission", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "PermissionSearchGroup", "SearchGroup")]
        public EntityCollection<SearchGroup> SearchGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SearchGroup>("UsersModel.PermissionSearchGroup", "SearchGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SearchGroup>("UsersModel.PermissionSearchGroup", "SearchGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Permissions_PermissionType", "PermissionType")]
        public PermissionType PermissionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PermissionType>("UsersModel.FK_Permissions_PermissionType", "PermissionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PermissionType>("UsersModel.FK_Permissions_PermissionType", "PermissionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PermissionType> PermissionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PermissionType>("UsersModel.FK_Permissions_PermissionType", "PermissionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PermissionType>("UsersModel.FK_Permissions_PermissionType", "PermissionType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="PermissionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PermissionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PermissionType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static PermissionType CreatePermissionType(global::System.Int32 id, global::System.String name, global::System.Boolean isDeleted)
        {
            PermissionType permissionType = new PermissionType();
            permissionType.Id = id;
            permissionType.Name = name;
            permissionType.IsDeleted = isDeleted;
            return permissionType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Permissions_PermissionType", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("UsersModel.FK_Permissions_PermissionType", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("UsersModel.FK_Permissions_PermissionType", "Permission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="Resource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Resource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Resource object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="resourceTypeId">Initial value of the ResourceTypeId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Resource CreateResource(global::System.Int32 id, global::System.Int32 resourceTypeId, global::System.Boolean isDeleted)
        {
            Resource resource = new Resource();
            resource.Id = id;
            resource.ResourceTypeId = resourceTypeId;
            resource.IsDeleted = isDeleted;
            return resource;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceTypeId
        {
            get
            {
                return _ResourceTypeId;
            }
            set
            {
                OnResourceTypeIdChanging(value);
                ReportPropertyChanging("ResourceTypeId");
                _ResourceTypeId = StructuralObject.SetValidValue(value, "ResourceTypeId");
                ReportPropertyChanged("ResourceTypeId");
                OnResourceTypeIdChanged();
            }
        }
        private global::System.Int32 _ResourceTypeId;
        partial void OnResourceTypeIdChanging(global::System.Int32 value);
        partial void OnResourceTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true, "GroupName");
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Resources_ResourceType", "ResourceType")]
        public ResourceType ResourceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("UsersModel.FK_Resources_ResourceType", "ResourceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("UsersModel.FK_Resources_ResourceType", "ResourceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceType> ResourceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("UsersModel.FK_Resources_ResourceType", "ResourceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceType>("UsersModel.FK_Resources_ResourceType", "ResourceType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="ResourceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static ResourceType CreateResourceType(global::System.Int32 id)
        {
            ResourceType resourceType = new ResourceType();
            resourceType.Id = id;
            return resourceType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Resources_ResourceType", "Resource")]
        public EntityCollection<Resource> Resources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("UsersModel.FK_Resources_ResourceType", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("UsersModel.FK_Resources_ResourceType", "Resource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_ServiceConfiguration_ResourceType", "ServiceConfiguration")]
        public EntityCollection<ServiceConfiguration> ServiceConfigurations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceConfiguration>("UsersModel.FK_ServiceConfiguration_ResourceType", "ServiceConfiguration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceConfiguration>("UsersModel.FK_ServiceConfiguration_ResourceType", "ServiceConfiguration", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String name, global::System.Boolean isDeleted)
        {
            Role role = new Role();
            role.Id = id;
            role.Name = name;
            role.IsDeleted = isDeleted;
            return role;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "UserRole", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("UsersModel.UserRole", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("UsersModel.UserRole", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "RolePermission", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("UsersModel.RolePermission", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("UsersModel.RolePermission", "Permission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="SearchColumn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SearchColumn : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchColumn object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="alias">Initial value of the Alias property.</param>
        /// <param name="tableId">Initial value of the TableId property.</param>
        public static SearchColumn CreateSearchColumn(global::System.Int32 id, global::System.String name, global::System.String alias, global::System.Int32 tableId)
        {
            SearchColumn searchColumn = new SearchColumn();
            searchColumn.Id = id;
            searchColumn.Name = name;
            searchColumn.Alias = alias;
            searchColumn.TableId = tableId;
            return searchColumn;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, false, "Alias");
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private global::System.String _Alias;
        partial void OnAliasChanging(global::System.String value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TableId
        {
            get
            {
                return _TableId;
            }
            set
            {
                OnTableIdChanging(value);
                ReportPropertyChanging("TableId");
                _TableId = StructuralObject.SetValidValue(value, "TableId");
                ReportPropertyChanged("TableId");
                OnTableIdChanged();
            }
        }
        private global::System.Int32 _TableId;
        partial void OnTableIdChanging(global::System.Int32 value);
        partial void OnTableIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "SearchGroupColumns", "SearchGroup")]
        public EntityCollection<SearchGroup> SearchGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SearchGroup>("UsersModel.SearchGroupColumns", "SearchGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SearchGroup>("UsersModel.SearchGroupColumns", "SearchGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_SearchColumns_SearchTables", "SearchTable")]
        public SearchTable SearchTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchTable>("UsersModel.FK_SearchColumns_SearchTables", "SearchTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchTable>("UsersModel.FK_SearchColumns_SearchTables", "SearchTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SearchTable> SearchTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchTable>("UsersModel.FK_SearchColumns_SearchTables", "SearchTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SearchTable>("UsersModel.FK_SearchColumns_SearchTables", "SearchTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="SearchGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SearchGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="tableId">Initial value of the TableId property.</param>
        public static SearchGroup CreateSearchGroup(global::System.Int32 id, global::System.String name, global::System.Int32 tableId)
        {
            SearchGroup searchGroup = new SearchGroup();
            searchGroup.Id = id;
            searchGroup.Name = name;
            searchGroup.TableId = tableId;
            return searchGroup;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TableId
        {
            get
            {
                return _TableId;
            }
            set
            {
                OnTableIdChanging(value);
                ReportPropertyChanging("TableId");
                _TableId = StructuralObject.SetValidValue(value, "TableId");
                ReportPropertyChanged("TableId");
                OnTableIdChanged();
            }
        }
        private global::System.Int32 _TableId;
        partial void OnTableIdChanging(global::System.Int32 value);
        partial void OnTableIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "SearchGroupColumns", "SearchColumn")]
        public EntityCollection<SearchColumn> SearchColumns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SearchColumn>("UsersModel.SearchGroupColumns", "SearchColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SearchColumn>("UsersModel.SearchGroupColumns", "SearchColumn", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "PermissionSearchGroup", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("UsersModel.PermissionSearchGroup", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("UsersModel.PermissionSearchGroup", "Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_SearchGroups_SearchTables", "SearchTable")]
        public SearchTable SearchTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchTable>("UsersModel.FK_SearchGroups_SearchTables", "SearchTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchTable>("UsersModel.FK_SearchGroups_SearchTables", "SearchTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SearchTable> SearchTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SearchTable>("UsersModel.FK_SearchGroups_SearchTables", "SearchTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SearchTable>("UsersModel.FK_SearchGroups_SearchTables", "SearchTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="SearchTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SearchTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SearchTable object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static SearchTable CreateSearchTable(global::System.Int32 id, global::System.String name)
        {
            SearchTable searchTable = new SearchTable();
            searchTable.Id = id;
            searchTable.Name = name;
            return searchTable;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_SearchColumns_SearchTables", "SearchColumn")]
        public EntityCollection<SearchColumn> SearchColumns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SearchColumn>("UsersModel.FK_SearchColumns_SearchTables", "SearchColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SearchColumn>("UsersModel.FK_SearchColumns_SearchTables", "SearchColumn", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_SearchGroups_SearchTables", "SearchGroup")]
        public EntityCollection<SearchGroup> SearchGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SearchGroup>("UsersModel.FK_SearchGroups_SearchTables", "SearchGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SearchGroup>("UsersModel.FK_SearchGroups_SearchTables", "SearchGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="ServiceConfiguration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceConfiguration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceConfiguration object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="resourceTypeId">Initial value of the ResourceTypeId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static ServiceConfiguration CreateServiceConfiguration(global::System.Int32 id, global::System.Int32 resourceTypeId, global::System.Boolean isDeleted)
        {
            ServiceConfiguration serviceConfiguration = new ServiceConfiguration();
            serviceConfiguration.Id = id;
            serviceConfiguration.ResourceTypeId = resourceTypeId;
            serviceConfiguration.IsDeleted = isDeleted;
            return serviceConfiguration;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResourceTypeId
        {
            get
            {
                return _ResourceTypeId;
            }
            set
            {
                OnResourceTypeIdChanging(value);
                ReportPropertyChanging("ResourceTypeId");
                _ResourceTypeId = StructuralObject.SetValidValue(value, "ResourceTypeId");
                ReportPropertyChanged("ResourceTypeId");
                OnResourceTypeIdChanged();
            }
        }
        private global::System.Int32 _ResourceTypeId;
        partial void OnResourceTypeIdChanging(global::System.Int32 value);
        partial void OnResourceTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true, "GroupName");
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_ServiceConfiguration_ResourceType", "ResourceType")]
        public ResourceType ResourceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("UsersModel.FK_ServiceConfiguration_ResourceType", "ResourceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("UsersModel.FK_ServiceConfiguration_ResourceType", "ResourceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResourceType> ResourceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResourceType>("UsersModel.FK_ServiceConfiguration_ResourceType", "ResourceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResourceType>("UsersModel.FK_ServiceConfiguration_ResourceType", "ResourceType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Status : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Status object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Status CreateStatus(global::System.Int32 id, global::System.String name)
        {
            Status status = new Status();
            status.Id = id;
            status.Name = name;
            return status;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_UsageStats_Statuses", "UsageStat")]
        public EntityCollection<UsageStat> UsageStats
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsageStat>("UsersModel.FK_UsageStats_Statuses", "UsageStat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsageStat>("UsersModel.FK_UsageStats_Statuses", "UsageStat", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="Subscription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subscription : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subscription object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="methodGroupId">Initial value of the MethodGroupId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Subscription CreateSubscription(global::System.Int32 id, global::System.Int32 methodGroupId, global::System.Int32 userId)
        {
            Subscription subscription = new Subscription();
            subscription.Id = id;
            subscription.MethodGroupId = methodGroupId;
            subscription.UserId = userId;
            return subscription;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MethodGroupId
        {
            get
            {
                return _MethodGroupId;
            }
            set
            {
                OnMethodGroupIdChanging(value);
                ReportPropertyChanging("MethodGroupId");
                _MethodGroupId = StructuralObject.SetValidValue(value, "MethodGroupId");
                ReportPropertyChanged("MethodGroupId");
                OnMethodGroupIdChanged();
            }
        }
        private global::System.Int32 _MethodGroupId;
        partial void OnMethodGroupIdChanging(global::System.Int32 value);
        partial void OnMethodGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Subscriptions_MethodGroups", "MethodGroup")]
        public MethodGroup MethodGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MethodGroup>("UsersModel.FK_Subscriptions_MethodGroups", "MethodGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MethodGroup>("UsersModel.FK_Subscriptions_MethodGroups", "MethodGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MethodGroup> MethodGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MethodGroup>("UsersModel.FK_Subscriptions_MethodGroups", "MethodGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MethodGroup>("UsersModel.FK_Subscriptions_MethodGroups", "MethodGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Subscriptions_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_Subscriptions_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_Subscriptions_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_Subscriptions_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UsersModel.FK_Subscriptions_Users", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="SubscriptionRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubscriptionRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubscriptionRequest object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="lastUpdate">Initial value of the LastUpdate property.</param>
        /// <param name="isFulfilled">Initial value of the IsFulfilled property.</param>
        /// <param name="requestTypeId">Initial value of the RequestTypeId property.</param>
        /// <param name="accepted">Initial value of the Accepted property.</param>
        public static SubscriptionRequest CreateSubscriptionRequest(global::System.Int32 id, global::System.Int32 userId, global::System.DateTime lastUpdate, global::System.Boolean isFulfilled, global::System.Int32 requestTypeId, global::System.Boolean accepted)
        {
            SubscriptionRequest subscriptionRequest = new SubscriptionRequest();
            subscriptionRequest.Id = id;
            subscriptionRequest.UserId = userId;
            subscriptionRequest.LastUpdate = lastUpdate;
            subscriptionRequest.IsFulfilled = isFulfilled;
            subscriptionRequest.RequestTypeId = requestTypeId;
            subscriptionRequest.Accepted = accepted;
            return subscriptionRequest;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdate
        {
            get
            {
                return _LastUpdate;
            }
            set
            {
                OnLastUpdateChanging(value);
                ReportPropertyChanging("LastUpdate");
                _LastUpdate = StructuralObject.SetValidValue(value, "LastUpdate");
                ReportPropertyChanged("LastUpdate");
                OnLastUpdateChanged();
            }
        }
        private global::System.DateTime _LastUpdate;
        partial void OnLastUpdateChanging(global::System.DateTime value);
        partial void OnLastUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFulfilled
        {
            get
            {
                return _IsFulfilled;
            }
            set
            {
                OnIsFulfilledChanging(value);
                ReportPropertyChanging("IsFulfilled");
                _IsFulfilled = StructuralObject.SetValidValue(value, "IsFulfilled");
                ReportPropertyChanged("IsFulfilled");
                OnIsFulfilledChanged();
            }
        }
        private global::System.Boolean _IsFulfilled;
        partial void OnIsFulfilledChanging(global::System.Boolean value);
        partial void OnIsFulfilledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestTypeId
        {
            get
            {
                return _RequestTypeId;
            }
            set
            {
                OnRequestTypeIdChanging(value);
                ReportPropertyChanging("RequestTypeId");
                _RequestTypeId = StructuralObject.SetValidValue(value, "RequestTypeId");
                ReportPropertyChanged("RequestTypeId");
                OnRequestTypeIdChanged();
            }
        }
        private global::System.Int32 _RequestTypeId;
        partial void OnRequestTypeIdChanging(global::System.Int32 value);
        partial void OnRequestTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Accepted
        {
            get
            {
                return _Accepted;
            }
            set
            {
                OnAcceptedChanging(value);
                ReportPropertyChanging("Accepted");
                _Accepted = StructuralObject.SetValidValue(value, "Accepted");
                ReportPropertyChanged("Accepted");
                OnAcceptedChanged();
            }
        }
        private global::System.Boolean _Accepted;
        partial void OnAcceptedChanging(global::System.Boolean value);
        partial void OnAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AcceptedBy
        {
            get
            {
                return _AcceptedBy;
            }
            set
            {
                OnAcceptedByChanging(value);
                ReportPropertyChanging("AcceptedBy");
                _AcceptedBy = StructuralObject.SetValidValue(value, "AcceptedBy");
                ReportPropertyChanged("AcceptedBy");
                OnAcceptedByChanged();
            }
        }
        private Nullable<global::System.Int32> _AcceptedBy;
        partial void OnAcceptedByChanging(Nullable<global::System.Int32> value);
        partial void OnAcceptedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Notify
        {
            get
            {
                return _Notify;
            }
            set
            {
                OnNotifyChanging(value);
                ReportPropertyChanging("Notify");
                _Notify = StructuralObject.SetValidValue(value, "Notify");
                ReportPropertyChanged("Notify");
                OnNotifyChanged();
            }
        }
        private Nullable<global::System.Boolean> _Notify;
        partial void OnNotifyChanging(Nullable<global::System.Boolean> value);
        partial void OnNotifyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EmailSent
        {
            get
            {
                return _EmailSent;
            }
            set
            {
                OnEmailSentChanging(value);
                ReportPropertyChanging("EmailSent");
                _EmailSent = StructuralObject.SetValidValue(value, "EmailSent");
                ReportPropertyChanged("EmailSent");
                OnEmailSentChanged();
            }
        }
        private Nullable<global::System.DateTime> _EmailSent;
        partial void OnEmailSentChanging(Nullable<global::System.DateTime> value);
        partial void OnEmailSentChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_SubscriptionRequests_SubscriptionRequestType", "SubscriptionRequestType")]
        public SubscriptionRequestType SubscriptionRequestType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubscriptionRequestType>("UsersModel.FK_SubscriptionRequests_SubscriptionRequestType", "SubscriptionRequestType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubscriptionRequestType>("UsersModel.FK_SubscriptionRequests_SubscriptionRequestType", "SubscriptionRequestType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubscriptionRequestType> SubscriptionRequestTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubscriptionRequestType>("UsersModel.FK_SubscriptionRequests_SubscriptionRequestType", "SubscriptionRequestType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubscriptionRequestType>("UsersModel.FK_SubscriptionRequests_SubscriptionRequestType", "SubscriptionRequestType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "SubscriptionRequestMethodGroup", "MethodGroup")]
        public EntityCollection<MethodGroup> MethodGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MethodGroup>("UsersModel.SubscriptionRequestMethodGroup", "MethodGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MethodGroup>("UsersModel.SubscriptionRequestMethodGroup", "MethodGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_SubscriptionRequest_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_SubscriptionRequest_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_SubscriptionRequest_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_SubscriptionRequest_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UsersModel.FK_SubscriptionRequest_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_SubscriptionRequest_Users_AcceptedBy", "User")]
        public User Acceptor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_SubscriptionRequest_Users_AcceptedBy", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_SubscriptionRequest_Users_AcceptedBy", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> AcceptorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_SubscriptionRequest_Users_AcceptedBy", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UsersModel.FK_SubscriptionRequest_Users_AcceptedBy", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Trial_SubscriptionRequests", "Trial")]
        public EntityCollection<Trial> Trials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trial>("UsersModel.FK_Trial_SubscriptionRequests", "Trial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trial>("UsersModel.FK_Trial_SubscriptionRequests", "Trial", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="SubscriptionRequestType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubscriptionRequestType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubscriptionRequestType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static SubscriptionRequestType CreateSubscriptionRequestType(global::System.Int32 id)
        {
            SubscriptionRequestType subscriptionRequestType = new SubscriptionRequestType();
            subscriptionRequestType.Id = id;
            return subscriptionRequestType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_SubscriptionRequests_SubscriptionRequestType", "SubscriptionRequest")]
        public EntityCollection<SubscriptionRequest> SubscriptionRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubscriptionRequest>("UsersModel.FK_SubscriptionRequests_SubscriptionRequestType", "SubscriptionRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubscriptionRequest>("UsersModel.FK_SubscriptionRequests_SubscriptionRequestType", "SubscriptionRequest", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="ThresholdPeriod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ThresholdPeriod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ThresholdPeriod object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="howLong">Initial value of the HowLong property.</param>
        /// <param name="datePart">Initial value of the DatePart property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static ThresholdPeriod CreateThresholdPeriod(global::System.Int32 id, global::System.String name, global::System.Int32 howLong, global::System.String datePart, global::System.Boolean isDeleted)
        {
            ThresholdPeriod thresholdPeriod = new ThresholdPeriod();
            thresholdPeriod.Id = id;
            thresholdPeriod.Name = name;
            thresholdPeriod.HowLong = howLong;
            thresholdPeriod.DatePart = datePart;
            thresholdPeriod.IsDeleted = isDeleted;
            return thresholdPeriod;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HowLong
        {
            get
            {
                return _HowLong;
            }
            set
            {
                OnHowLongChanging(value);
                ReportPropertyChanging("HowLong");
                _HowLong = StructuralObject.SetValidValue(value, "HowLong");
                ReportPropertyChanged("HowLong");
                OnHowLongChanged();
            }
        }
        private global::System.Int32 _HowLong;
        partial void OnHowLongChanging(global::System.Int32 value);
        partial void OnHowLongChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DatePart
        {
            get
            {
                return _DatePart;
            }
            set
            {
                OnDatePartChanging(value);
                ReportPropertyChanging("DatePart");
                _DatePart = StructuralObject.SetValidValue(value, false, "DatePart");
                ReportPropertyChanged("DatePart");
                OnDatePartChanged();
            }
        }
        private global::System.String _DatePart;
        partial void OnDatePartChanging(global::System.String value);
        partial void OnDatePartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Users_ThresholdPeriods", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("UsersModel.FK_Users_ThresholdPeriods", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("UsersModel.FK_Users_ThresholdPeriods", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="TimeZone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimeZone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimeZone object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static TimeZone CreateTimeZone(global::System.Int32 id, global::System.String name, global::System.String code)
        {
            TimeZone timeZone = new TimeZone();
            timeZone.Id = id;
            timeZone.Name = name;
            timeZone.Code = code;
            return timeZone;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Users_TimeZones", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("UsersModel.FK_Users_TimeZones", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("UsersModel.FK_Users_TimeZones", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="Trial")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Trial : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Trial object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="requestId">Initial value of the RequestId property.</param>
        public static Trial CreateTrial(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 requestId)
        {
            Trial trial = new Trial();
            trial.Id = id;
            trial.UserId = userId;
            trial.RequestId = requestId;
            return trial;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VerificationCode
        {
            get
            {
                return _VerificationCode;
            }
            set
            {
                OnVerificationCodeChanging(value);
                ReportPropertyChanging("VerificationCode");
                _VerificationCode = StructuralObject.SetValidValue(value, true, "VerificationCode");
                ReportPropertyChanged("VerificationCode");
                OnVerificationCodeChanged();
            }
        }
        private global::System.String _VerificationCode;
        partial void OnVerificationCodeChanging(global::System.String value);
        partial void OnVerificationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrialStart
        {
            get
            {
                return _TrialStart;
            }
            set
            {
                OnTrialStartChanging(value);
                ReportPropertyChanging("TrialStart");
                _TrialStart = StructuralObject.SetValidValue(value, "TrialStart");
                ReportPropertyChanged("TrialStart");
                OnTrialStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrialStart;
        partial void OnTrialStartChanging(Nullable<global::System.DateTime> value);
        partial void OnTrialStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrialEnd
        {
            get
            {
                return _TrialEnd;
            }
            set
            {
                OnTrialEndChanging(value);
                ReportPropertyChanging("TrialEnd");
                _TrialEnd = StructuralObject.SetValidValue(value, "TrialEnd");
                ReportPropertyChanged("TrialEnd");
                OnTrialEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrialEnd;
        partial void OnTrialEndChanging(Nullable<global::System.DateTime> value);
        partial void OnTrialEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequestId
        {
            get
            {
                return _RequestId;
            }
            set
            {
                OnRequestIdChanging(value);
                ReportPropertyChanging("RequestId");
                _RequestId = StructuralObject.SetValidValue(value, "RequestId");
                ReportPropertyChanged("RequestId");
                OnRequestIdChanged();
            }
        }
        private global::System.Int32 _RequestId;
        partial void OnRequestIdChanging(global::System.Int32 value);
        partial void OnRequestIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Trial_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_Trial_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_Trial_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_Trial_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UsersModel.FK_Trial_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Trial_SubscriptionRequests", "SubscriptionRequest")]
        public SubscriptionRequest SubscriptionRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubscriptionRequest>("UsersModel.FK_Trial_SubscriptionRequests", "SubscriptionRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubscriptionRequest>("UsersModel.FK_Trial_SubscriptionRequests", "SubscriptionRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubscriptionRequest> SubscriptionRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubscriptionRequest>("UsersModel.FK_Trial_SubscriptionRequests", "SubscriptionRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubscriptionRequest>("UsersModel.FK_Trial_SubscriptionRequests", "SubscriptionRequest", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="UsageStat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsageStat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsageStat object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="requestDate">Initial value of the RequestDate property.</param>
        /// <param name="dataFormatId">Initial value of the DataFormatId property.</param>
        /// <param name="statusId">Initial value of the StatusId property.</param>
        public static UsageStat CreateUsageStat(global::System.Int64 id, global::System.DateTime requestDate, global::System.Int32 dataFormatId, global::System.Int32 statusId)
        {
            UsageStat usageStat = new UsageStat();
            usageStat.Id = id;
            usageStat.RequestDate = requestDate;
            usageStat.DataFormatId = dataFormatId;
            usageStat.StatusId = statusId;
            return usageStat;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IpId
        {
            get
            {
                return _IpId;
            }
            set
            {
                OnIpIdChanging(value);
                ReportPropertyChanging("IpId");
                _IpId = StructuralObject.SetValidValue(value, "IpId");
                ReportPropertyChanged("IpId");
                OnIpIdChanged();
            }
        }
        private Nullable<global::System.Int32> _IpId;
        partial void OnIpIdChanging(Nullable<global::System.Int32> value);
        partial void OnIpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RequestDate
        {
            get
            {
                return _RequestDate;
            }
            set
            {
                OnRequestDateChanging(value);
                ReportPropertyChanging("RequestDate");
                _RequestDate = StructuralObject.SetValidValue(value, "RequestDate");
                ReportPropertyChanged("RequestDate");
                OnRequestDateChanged();
            }
        }
        private global::System.DateTime _RequestDate;
        partial void OnRequestDateChanging(global::System.DateTime value);
        partial void OnRequestDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HttpStatusCode
        {
            get
            {
                return _HttpStatusCode;
            }
            set
            {
                OnHttpStatusCodeChanging(value);
                ReportPropertyChanging("HttpStatusCode");
                _HttpStatusCode = StructuralObject.SetValidValue(value, "HttpStatusCode");
                ReportPropertyChanged("HttpStatusCode");
                OnHttpStatusCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _HttpStatusCode;
        partial void OnHttpStatusCodeChanging(Nullable<global::System.Int32> value);
        partial void OnHttpStatusCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MethodId
        {
            get
            {
                return _MethodId;
            }
            set
            {
                OnMethodIdChanging(value);
                ReportPropertyChanging("MethodId");
                _MethodId = StructuralObject.SetValidValue(value, "MethodId");
                ReportPropertyChanged("MethodId");
                OnMethodIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MethodId;
        partial void OnMethodIdChanging(Nullable<global::System.Int32> value);
        partial void OnMethodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MethodArgs
        {
            get
            {
                return _MethodArgs;
            }
            set
            {
                OnMethodArgsChanging(value);
                ReportPropertyChanging("MethodArgs");
                _MethodArgs = StructuralObject.SetValidValue(value, true, "MethodArgs");
                ReportPropertyChanged("MethodArgs");
                OnMethodArgsChanged();
            }
        }
        private global::System.String _MethodArgs;
        partial void OnMethodArgsChanging(global::System.String value);
        partial void OnMethodArgsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataFormatId
        {
            get
            {
                return _DataFormatId;
            }
            set
            {
                OnDataFormatIdChanging(value);
                ReportPropertyChanging("DataFormatId");
                _DataFormatId = StructuralObject.SetValidValue(value, "DataFormatId");
                ReportPropertyChanged("DataFormatId");
                OnDataFormatIdChanged();
            }
        }
        private global::System.Int32 _DataFormatId;
        partial void OnDataFormatIdChanging(global::System.Int32 value);
        partial void OnDataFormatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorMessage
        {
            get
            {
                return _ErrorMessage;
            }
            set
            {
                OnErrorMessageChanging(value);
                ReportPropertyChanging("ErrorMessage");
                _ErrorMessage = StructuralObject.SetValidValue(value, true, "ErrorMessage");
                ReportPropertyChanged("ErrorMessage");
                OnErrorMessageChanged();
            }
        }
        private global::System.String _ErrorMessage;
        partial void OnErrorMessageChanging(global::System.String value);
        partial void OnErrorMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RequestDuration
        {
            get
            {
                return _RequestDuration;
            }
            set
            {
                OnRequestDurationChanging(value);
                ReportPropertyChanging("RequestDuration");
                _RequestDuration = StructuralObject.SetValidValue(value, "RequestDuration");
                ReportPropertyChanged("RequestDuration");
                OnRequestDurationChanged();
            }
        }
        private Nullable<global::System.Int64> _RequestDuration;
        partial void OnRequestDurationChanging(Nullable<global::System.Int64> value);
        partial void OnRequestDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value, "StatusId");
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private global::System.Int32 _StatusId;
        partial void OnStatusIdChanging(global::System.Int32 value);
        partial void OnStatusIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_UsageStats_Methods", "Method")]
        public Method Method
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Method>("UsersModel.FK_UsageStats_Methods", "Method").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Method>("UsersModel.FK_UsageStats_Methods", "Method").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Method> MethodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Method>("UsersModel.FK_UsageStats_Methods", "Method");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Method>("UsersModel.FK_UsageStats_Methods", "Method", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_UsageStats_Statuses", "Status")]
        public Status Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("UsersModel.FK_UsageStats_Statuses", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("UsersModel.FK_UsageStats_Statuses", "Status").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("UsersModel.FK_UsageStats_Statuses", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("UsersModel.FK_UsageStats_Statuses", "Status", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_UsageStats_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_UsageStats_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_UsageStats_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_UsageStats_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UsersModel.FK_UsageStats_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_UsageStats_UsersIPs", "IP")]
        public IP IP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("UsersModel.FK_UsageStats_UsersIPs", "IP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("UsersModel.FK_UsageStats_UsersIPs", "IP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IP> IPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IP>("UsersModel.FK_UsageStats_UsersIPs", "IP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IP>("UsersModel.FK_UsageStats_UsersIPs", "IP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="salt">Initial value of the Salt property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="failedLoginAttemptsCnt">Initial value of the FailedLoginAttemptsCnt property.</param>
        /// <param name="accountExpirationDate">Initial value of the AccountExpirationDate property.</param>
        /// <param name="thresholdPeriodId">Initial value of the ThresholdPeriodId property.</param>
        /// <param name="thresholdPeriodEnd">Initial value of the ThresholdPeriodEnd property.</param>
        /// <param name="hits">Initial value of the Hits property.</param>
        /// <param name="hitsLimit">Initial value of the HitsLimit property.</param>
        /// <param name="timeZoneId">Initial value of the TimeZoneId property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.Int32 companyId, global::System.String username, global::System.String password, global::System.String salt, global::System.Boolean isActive, global::System.Int16 failedLoginAttemptsCnt, global::System.DateTime accountExpirationDate, global::System.Int32 thresholdPeriodId, global::System.DateTime thresholdPeriodEnd, global::System.Int32 hits, global::System.Int32 hitsLimit, global::System.Int32 timeZoneId, global::System.String email, global::System.Boolean isDeleted)
        {
            User user = new User();
            user.Id = id;
            user.CompanyId = companyId;
            user.Username = username;
            user.Password = password;
            user.Salt = salt;
            user.IsActive = isActive;
            user.FailedLoginAttemptsCnt = failedLoginAttemptsCnt;
            user.AccountExpirationDate = accountExpirationDate;
            user.ThresholdPeriodId = thresholdPeriodId;
            user.ThresholdPeriodEnd = thresholdPeriodEnd;
            user.Hits = hits;
            user.HitsLimit = hitsLimit;
            user.TimeZoneId = timeZoneId;
            user.Email = email;
            user.IsDeleted = isDeleted;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value, "CompanyId");
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Firstname
        {
            get
            {
                return _Firstname;
            }
            set
            {
                OnFirstnameChanging(value);
                ReportPropertyChanging("Firstname");
                _Firstname = StructuralObject.SetValidValue(value, true, "Firstname");
                ReportPropertyChanged("Firstname");
                OnFirstnameChanged();
            }
        }
        private global::System.String _Firstname;
        partial void OnFirstnameChanging(global::System.String value);
        partial void OnFirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Middlename
        {
            get
            {
                return _Middlename;
            }
            set
            {
                OnMiddlenameChanging(value);
                ReportPropertyChanging("Middlename");
                _Middlename = StructuralObject.SetValidValue(value, true, "Middlename");
                ReportPropertyChanged("Middlename");
                OnMiddlenameChanged();
            }
        }
        private global::System.String _Middlename;
        partial void OnMiddlenameChanging(global::System.String value);
        partial void OnMiddlenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Lastname
        {
            get
            {
                return _Lastname;
            }
            set
            {
                OnLastnameChanging(value);
                ReportPropertyChanging("Lastname");
                _Lastname = StructuralObject.SetValidValue(value, true, "Lastname");
                ReportPropertyChanged("Lastname");
                OnLastnameChanged();
            }
        }
        private global::System.String _Lastname;
        partial void OnLastnameChanging(global::System.String value);
        partial void OnLastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneExt
        {
            get
            {
                return _PhoneExt;
            }
            set
            {
                OnPhoneExtChanging(value);
                ReportPropertyChanging("PhoneExt");
                _PhoneExt = StructuralObject.SetValidValue(value, true, "PhoneExt");
                ReportPropertyChanged("PhoneExt");
                OnPhoneExtChanged();
            }
        }
        private global::System.String _PhoneExt;
        partial void OnPhoneExtChanging(global::System.String value);
        partial void OnPhoneExtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false, "Username");
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Salt
        {
            get
            {
                return _Salt;
            }
            set
            {
                OnSaltChanging(value);
                ReportPropertyChanging("Salt");
                _Salt = StructuralObject.SetValidValue(value, false, "Salt");
                ReportPropertyChanged("Salt");
                OnSaltChanged();
            }
        }
        private global::System.String _Salt;
        partial void OnSaltChanging(global::System.String value);
        partial void OnSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 FailedLoginAttemptsCnt
        {
            get
            {
                return _FailedLoginAttemptsCnt;
            }
            set
            {
                OnFailedLoginAttemptsCntChanging(value);
                ReportPropertyChanging("FailedLoginAttemptsCnt");
                _FailedLoginAttemptsCnt = StructuralObject.SetValidValue(value, "FailedLoginAttemptsCnt");
                ReportPropertyChanged("FailedLoginAttemptsCnt");
                OnFailedLoginAttemptsCntChanged();
            }
        }
        private global::System.Int16 _FailedLoginAttemptsCnt;
        partial void OnFailedLoginAttemptsCntChanging(global::System.Int16 value);
        partial void OnFailedLoginAttemptsCntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastFailedAttempt
        {
            get
            {
                return _LastFailedAttempt;
            }
            set
            {
                OnLastFailedAttemptChanging(value);
                ReportPropertyChanging("LastFailedAttempt");
                _LastFailedAttempt = StructuralObject.SetValidValue(value, "LastFailedAttempt");
                ReportPropertyChanged("LastFailedAttempt");
                OnLastFailedAttemptChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastFailedAttempt;
        partial void OnLastFailedAttemptChanging(Nullable<global::System.DateTime> value);
        partial void OnLastFailedAttemptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AccountExpirationDate
        {
            get
            {
                return _AccountExpirationDate;
            }
            set
            {
                OnAccountExpirationDateChanging(value);
                ReportPropertyChanging("AccountExpirationDate");
                _AccountExpirationDate = StructuralObject.SetValidValue(value, "AccountExpirationDate");
                ReportPropertyChanged("AccountExpirationDate");
                OnAccountExpirationDateChanged();
            }
        }
        private global::System.DateTime _AccountExpirationDate;
        partial void OnAccountExpirationDateChanging(global::System.DateTime value);
        partial void OnAccountExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ThresholdPeriodId
        {
            get
            {
                return _ThresholdPeriodId;
            }
            set
            {
                OnThresholdPeriodIdChanging(value);
                ReportPropertyChanging("ThresholdPeriodId");
                _ThresholdPeriodId = StructuralObject.SetValidValue(value, "ThresholdPeriodId");
                ReportPropertyChanged("ThresholdPeriodId");
                OnThresholdPeriodIdChanged();
            }
        }
        private global::System.Int32 _ThresholdPeriodId;
        partial void OnThresholdPeriodIdChanging(global::System.Int32 value);
        partial void OnThresholdPeriodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ThresholdPeriodEnd
        {
            get
            {
                return _ThresholdPeriodEnd;
            }
            set
            {
                OnThresholdPeriodEndChanging(value);
                ReportPropertyChanging("ThresholdPeriodEnd");
                _ThresholdPeriodEnd = StructuralObject.SetValidValue(value, "ThresholdPeriodEnd");
                ReportPropertyChanged("ThresholdPeriodEnd");
                OnThresholdPeriodEndChanged();
            }
        }
        private global::System.DateTime _ThresholdPeriodEnd;
        partial void OnThresholdPeriodEndChanging(global::System.DateTime value);
        partial void OnThresholdPeriodEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Hits
        {
            get
            {
                return _Hits;
            }
            set
            {
                OnHitsChanging(value);
                ReportPropertyChanging("Hits");
                _Hits = StructuralObject.SetValidValue(value, "Hits");
                ReportPropertyChanged("Hits");
                OnHitsChanged();
            }
        }
        private global::System.Int32 _Hits;
        partial void OnHitsChanging(global::System.Int32 value);
        partial void OnHitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HitsLimit
        {
            get
            {
                return _HitsLimit;
            }
            set
            {
                OnHitsLimitChanging(value);
                ReportPropertyChanging("HitsLimit");
                _HitsLimit = StructuralObject.SetValidValue(value, "HitsLimit");
                ReportPropertyChanged("HitsLimit");
                OnHitsLimitChanged();
            }
        }
        private global::System.Int32 _HitsLimit;
        partial void OnHitsLimitChanging(global::System.Int32 value);
        partial void OnHitsLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TimeZoneId
        {
            get
            {
                return _TimeZoneId;
            }
            set
            {
                OnTimeZoneIdChanging(value);
                ReportPropertyChanging("TimeZoneId");
                _TimeZoneId = StructuralObject.SetValidValue(value, "TimeZoneId");
                ReportPropertyChanged("TimeZoneId");
                OnTimeZoneIdChanged();
            }
        }
        private global::System.Int32 _TimeZoneId;
        partial void OnTimeZoneIdChanging(global::System.Int32 value);
        partial void OnTimeZoneIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                OnSessionIdChanging(value);
                ReportPropertyChanging("SessionId");
                _SessionId = StructuralObject.SetValidValue(value, "SessionId");
                ReportPropertyChanged("SessionId");
                OnSessionIdChanged();
            }
        }
        private Nullable<global::System.Guid> _SessionId;
        partial void OnSessionIdChanging(Nullable<global::System.Guid> value);
        partial void OnSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Audit_Users", "Audit")]
        public EntityCollection<Audit> Audits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Audit>("UsersModel.FK_Audit_Users", "Audit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Audit>("UsersModel.FK_Audit_Users", "Audit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Users_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("UsersModel.FK_Users_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("UsersModel.FK_Users_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("UsersModel.FK_Users_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("UsersModel.FK_Users_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Users_ThresholdPeriods", "ThresholdPeriod")]
        public ThresholdPeriod ThresholdPeriod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThresholdPeriod>("UsersModel.FK_Users_ThresholdPeriods", "ThresholdPeriod").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThresholdPeriod>("UsersModel.FK_Users_ThresholdPeriods", "ThresholdPeriod").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ThresholdPeriod> ThresholdPeriodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ThresholdPeriod>("UsersModel.FK_Users_ThresholdPeriods", "ThresholdPeriod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ThresholdPeriod>("UsersModel.FK_Users_ThresholdPeriods", "ThresholdPeriod", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "UserRole", "Role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("UsersModel.UserRole", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("UsersModel.UserRole", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Users_TimeZones", "TimeZone")]
        public TimeZone TimeZone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeZone>("UsersModel.FK_Users_TimeZones", "TimeZone").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeZone>("UsersModel.FK_Users_TimeZones", "TimeZone").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TimeZone> TimeZoneReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TimeZone>("UsersModel.FK_Users_TimeZones", "TimeZone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TimeZone>("UsersModel.FK_Users_TimeZones", "TimeZone", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_UserSearchQueries_Users", "UserSearchQuery")]
        public EntityCollection<UserSearchQuery> UserSearchQueries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserSearchQuery>("UsersModel.FK_UserSearchQueries_Users", "UserSearchQuery");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserSearchQuery>("UsersModel.FK_UserSearchQueries_Users", "UserSearchQuery", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_UsageStats_Users", "UsageStat")]
        public EntityCollection<UsageStat> UsageStats
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsageStat>("UsersModel.FK_UsageStats_Users", "UsageStat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsageStat>("UsersModel.FK_UsageStats_Users", "UsageStat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Subscriptions_Users", "Subscription")]
        public EntityCollection<Subscription> Subscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("UsersModel.FK_Subscriptions_Users", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("UsersModel.FK_Subscriptions_Users", "Subscription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_SubscriptionRequest_Users", "SubscriptionRequest")]
        public EntityCollection<SubscriptionRequest> SubscriptionRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubscriptionRequest>("UsersModel.FK_SubscriptionRequest_Users", "SubscriptionRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubscriptionRequest>("UsersModel.FK_SubscriptionRequest_Users", "SubscriptionRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_Trial_Users", "Trial")]
        public EntityCollection<Trial> Trials
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Trial>("UsersModel.FK_Trial_Users", "Trial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Trial>("UsersModel.FK_Trial_Users", "Trial", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsersModel", Name="UserSearchQuery")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserSearchQuery : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserSearchQuery object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="queryParameters">Initial value of the QueryParameters property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserSearchQuery CreateUserSearchQuery(global::System.Int32 id, global::System.String name, global::System.String queryParameters, global::System.Int32 userId)
        {
            UserSearchQuery userSearchQuery = new UserSearchQuery();
            userSearchQuery.Id = id;
            userSearchQuery.Name = name;
            userSearchQuery.QueryParameters = queryParameters;
            userSearchQuery.UserId = userId;
            return userSearchQuery;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QueryParameters
        {
            get
            {
                return _QueryParameters;
            }
            set
            {
                OnQueryParametersChanging(value);
                ReportPropertyChanging("QueryParameters");
                _QueryParameters = StructuralObject.SetValidValue(value, false, "QueryParameters");
                ReportPropertyChanged("QueryParameters");
                OnQueryParametersChanged();
            }
        }
        private global::System.String _QueryParameters;
        partial void OnQueryParametersChanging(global::System.String value);
        partial void OnQueryParametersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsersModel", "FK_UserSearchQueries_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_UserSearchQueries_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_UserSearchQueries_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsersModel.FK_UserSearchQueries_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UsersModel.FK_UserSearchQueries_Users", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="UsersModel", Name="spInformerListOfCountries_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class spInformerListOfCountries_Result : ComplexObject
    {
        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true, "Country");
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Column1
        {
            get
            {
                return _Column1;
            }
            set
            {
                OnColumn1Changing(value);
                ReportPropertyChanging("Column1");
                _Column1 = StructuralObject.SetValidValue(value, "Column1");
                ReportPropertyChanged("Column1");
                OnColumn1Changed();
            }
        }
        private Nullable<global::System.Int32> _Column1;
        partial void OnColumn1Changing(Nullable<global::System.Int32> value);
        partial void OnColumn1Changed();

        #endregion

    }

    #endregion

}
